node {
  name: "wg1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "wg1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.01147481333464384
      }
    }
  }
}
node {
  name: "wg1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01147481333464384
      }
    }
  }
}
node {
  name: "wg1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "wg1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "wg1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "wg1/Initializer/random_uniform/max"
  input: "wg1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
}
node {
  name: "wg1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "wg1/Initializer/random_uniform/RandomUniform"
  input: "wg1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
}
node {
  name: "wg1/Initializer/random_uniform"
  op: "Add"
  input: "wg1/Initializer/random_uniform/mul"
  input: "wg1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
}
node {
  name: "wg1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wg1/Assign"
  op: "Assign"
  input: "wg1"
  input: "wg1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wg1/read"
  op: "Identity"
  input: "wg1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
}
node {
  name: "wg2/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "wg2/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.011048543266952038
      }
    }
  }
}
node {
  name: "wg2/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.011048543266952038
      }
    }
  }
}
node {
  name: "wg2/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "wg2/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "wg2/Initializer/random_uniform/sub"
  op: "Sub"
  input: "wg2/Initializer/random_uniform/max"
  input: "wg2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
}
node {
  name: "wg2/Initializer/random_uniform/mul"
  op: "Mul"
  input: "wg2/Initializer/random_uniform/RandomUniform"
  input: "wg2/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
}
node {
  name: "wg2/Initializer/random_uniform"
  op: "Add"
  input: "wg2/Initializer/random_uniform/mul"
  input: "wg2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
}
node {
  name: "wg2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wg2/Assign"
  op: "Assign"
  input: "wg2"
  input: "wg2/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wg2/read"
  op: "Identity"
  input: "wg2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
}
node {
  name: "wg3/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "wg3/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.015625
      }
    }
  }
}
node {
  name: "wg3/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.015625
      }
    }
  }
}
node {
  name: "wg3/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "wg3/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "wg3/Initializer/random_uniform/sub"
  op: "Sub"
  input: "wg3/Initializer/random_uniform/max"
  input: "wg3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
}
node {
  name: "wg3/Initializer/random_uniform/mul"
  op: "Mul"
  input: "wg3/Initializer/random_uniform/RandomUniform"
  input: "wg3/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
}
node {
  name: "wg3/Initializer/random_uniform"
  op: "Add"
  input: "wg3/Initializer/random_uniform/mul"
  input: "wg3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
}
node {
  name: "wg3"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wg3/Assign"
  op: "Assign"
  input: "wg3"
  input: "wg3/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wg3/read"
  op: "Identity"
  input: "wg3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
}
node {
  name: "wg4/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "wg4/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.022097086533904076
      }
    }
  }
}
node {
  name: "wg4/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.022097086533904076
      }
    }
  }
}
node {
  name: "wg4/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "wg4/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "wg4/Initializer/random_uniform/sub"
  op: "Sub"
  input: "wg4/Initializer/random_uniform/max"
  input: "wg4/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
}
node {
  name: "wg4/Initializer/random_uniform/mul"
  op: "Mul"
  input: "wg4/Initializer/random_uniform/RandomUniform"
  input: "wg4/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
}
node {
  name: "wg4/Initializer/random_uniform"
  op: "Add"
  input: "wg4/Initializer/random_uniform/mul"
  input: "wg4/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
}
node {
  name: "wg4"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wg4/Assign"
  op: "Assign"
  input: "wg4"
  input: "wg4/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wg4/read"
  op: "Identity"
  input: "wg4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
}
node {
  name: "wg5/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "wg5/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03797772526741028
      }
    }
  }
}
node {
  name: "wg5/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03797772526741028
      }
    }
  }
}
node {
  name: "wg5/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "wg5/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "wg5/Initializer/random_uniform/sub"
  op: "Sub"
  input: "wg5/Initializer/random_uniform/max"
  input: "wg5/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
}
node {
  name: "wg5/Initializer/random_uniform/mul"
  op: "Mul"
  input: "wg5/Initializer/random_uniform/RandomUniform"
  input: "wg5/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
}
node {
  name: "wg5/Initializer/random_uniform"
  op: "Add"
  input: "wg5/Initializer/random_uniform/mul"
  input: "wg5/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
}
node {
  name: "wg5"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wg5/Assign"
  op: "Assign"
  input: "wg5"
  input: "wg5/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wg5/read"
  op: "Identity"
  input: "wg5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
}
node {
  name: "wd1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "wd1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03797772526741028
      }
    }
  }
}
node {
  name: "wd1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03797772526741028
      }
    }
  }
}
node {
  name: "wd1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "wd1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "wd1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "wd1/Initializer/random_uniform/max"
  input: "wd1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
}
node {
  name: "wd1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "wd1/Initializer/random_uniform/RandomUniform"
  input: "wd1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
}
node {
  name: "wd1/Initializer/random_uniform"
  op: "Add"
  input: "wd1/Initializer/random_uniform/mul"
  input: "wd1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
}
node {
  name: "wd1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wd1/Assign"
  op: "Assign"
  input: "wd1"
  input: "wd1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wd1/read"
  op: "Identity"
  input: "wd1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
}
node {
  name: "wd2/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "wd2/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.022097086533904076
      }
    }
  }
}
node {
  name: "wd2/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.022097086533904076
      }
    }
  }
}
node {
  name: "wd2/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "wd2/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "wd2/Initializer/random_uniform/sub"
  op: "Sub"
  input: "wd2/Initializer/random_uniform/max"
  input: "wd2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
}
node {
  name: "wd2/Initializer/random_uniform/mul"
  op: "Mul"
  input: "wd2/Initializer/random_uniform/RandomUniform"
  input: "wd2/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
}
node {
  name: "wd2/Initializer/random_uniform"
  op: "Add"
  input: "wd2/Initializer/random_uniform/mul"
  input: "wd2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
}
node {
  name: "wd2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wd2/Assign"
  op: "Assign"
  input: "wd2"
  input: "wd2/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wd2/read"
  op: "Identity"
  input: "wd2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
}
node {
  name: "wd3/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "wd3/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.015625
      }
    }
  }
}
node {
  name: "wd3/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.015625
      }
    }
  }
}
node {
  name: "wd3/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "wd3/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "wd3/Initializer/random_uniform/sub"
  op: "Sub"
  input: "wd3/Initializer/random_uniform/max"
  input: "wd3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
}
node {
  name: "wd3/Initializer/random_uniform/mul"
  op: "Mul"
  input: "wd3/Initializer/random_uniform/RandomUniform"
  input: "wd3/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
}
node {
  name: "wd3/Initializer/random_uniform"
  op: "Add"
  input: "wd3/Initializer/random_uniform/mul"
  input: "wd3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
}
node {
  name: "wd3"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wd3/Assign"
  op: "Assign"
  input: "wd3"
  input: "wd3/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wd3/read"
  op: "Identity"
  input: "wd3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
}
node {
  name: "wd4/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "wd4/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.011048543266952038
      }
    }
  }
}
node {
  name: "wd4/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.011048543266952038
      }
    }
  }
}
node {
  name: "wd4/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "wd4/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "wd4/Initializer/random_uniform/sub"
  op: "Sub"
  input: "wd4/Initializer/random_uniform/max"
  input: "wd4/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
}
node {
  name: "wd4/Initializer/random_uniform/mul"
  op: "Mul"
  input: "wd4/Initializer/random_uniform/RandomUniform"
  input: "wd4/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
}
node {
  name: "wd4/Initializer/random_uniform"
  op: "Add"
  input: "wd4/Initializer/random_uniform/mul"
  input: "wd4/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
}
node {
  name: "wd4"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wd4/Assign"
  op: "Assign"
  input: "wd4"
  input: "wd4/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wd4/read"
  op: "Identity"
  input: "wd4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
}
node {
  name: "wd5/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "wd5/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.01351845171302557
      }
    }
  }
}
node {
  name: "wd5/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01351845171302557
      }
    }
  }
}
node {
  name: "wd5/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "wd5/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "wd5/Initializer/random_uniform/sub"
  op: "Sub"
  input: "wd5/Initializer/random_uniform/max"
  input: "wd5/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
}
node {
  name: "wd5/Initializer/random_uniform/mul"
  op: "Mul"
  input: "wd5/Initializer/random_uniform/RandomUniform"
  input: "wd5/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
}
node {
  name: "wd5/Initializer/random_uniform"
  op: "Add"
  input: "wd5/Initializer/random_uniform/mul"
  input: "wd5/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
}
node {
  name: "wd5"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wd5/Assign"
  op: "Assign"
  input: "wd5"
  input: "wd5/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wd5/read"
  op: "Identity"
  input: "wd5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 200
        }
      }
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "gen/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "gen/Reshape"
  op: "Reshape"
  input: "input"
  input: "gen/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gen/conv3d_transpose/output_shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gen/conv3d_transpose"
  op: "Conv3DBackpropInputV2"
  input: "gen/conv3d_transpose/output_shape"
  input: "wg1/read"
  input: "gen/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Assign"
  op: "Assign"
  input: "gen/BatchNorm/beta"
  input: "gen/BatchNorm/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm/beta/read"
  op: "Identity"
  input: "gen/BatchNorm/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "gen/BatchNorm/moving_mean"
  input: "gen/BatchNorm/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "gen/BatchNorm/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "gen/BatchNorm/moving_variance"
  input: "gen/BatchNorm/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "gen/BatchNorm/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/moments/mean"
  op: "Mean"
  input: "gen/conv3d_transpose"
  input: "gen/BatchNorm/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "gen/BatchNorm/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gen/conv3d_transpose"
  input: "gen/BatchNorm/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/moments/variance"
  op: "Mean"
  input: "gen/BatchNorm/moments/SquaredDifference"
  input: "gen/BatchNorm/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "gen/BatchNorm/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "gen/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "gen/BatchNorm/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "gen/BatchNorm/moving_mean/read"
  input: "gen/BatchNorm/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "gen/BatchNorm/AssignMovingAvg/sub"
  input: "gen/BatchNorm/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "gen/BatchNorm/moving_mean"
  input: "gen/BatchNorm/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "gen/BatchNorm/moving_variance/read"
  input: "gen/BatchNorm/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "gen/BatchNorm/AssignMovingAvg_1/sub"
  input: "gen/BatchNorm/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "gen/BatchNorm/moving_variance"
  input: "gen/BatchNorm/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/BatchNorm/batchnorm_1/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm/batchnorm_1/add"
  op: "Add"
  input: "gen/BatchNorm/moments/Squeeze_1"
  input: "gen/BatchNorm/batchnorm_1/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "gen/BatchNorm/batchnorm_1/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "gen/conv3d_transpose"
  input: "gen/BatchNorm/batchnorm_1/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "gen/BatchNorm/moments/Squeeze"
  input: "gen/BatchNorm/batchnorm_1/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "gen/BatchNorm/beta/read"
  input: "gen/BatchNorm/batchnorm_1/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm/batchnorm_1/add_1"
  op: "Add"
  input: "gen/BatchNorm/batchnorm_1/mul"
  input: "gen/BatchNorm/batchnorm_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/Relu"
  op: "Relu"
  input: "gen/BatchNorm/batchnorm_1/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/conv3d_transpose_1/output_shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gen/conv3d_transpose_1"
  op: "Conv3DBackpropInputV2"
  input: "gen/conv3d_transpose_1/output_shape"
  input: "wg2/read"
  input: "gen/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Assign"
  op: "Assign"
  input: "gen/BatchNorm_1/beta"
  input: "gen/BatchNorm_1/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/read"
  op: "Identity"
  input: "gen/BatchNorm_1/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_mean/Assign"
  op: "Assign"
  input: "gen/BatchNorm_1/moving_mean"
  input: "gen/BatchNorm_1/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_mean/read"
  op: "Identity"
  input: "gen/BatchNorm_1/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_variance/Assign"
  op: "Assign"
  input: "gen/BatchNorm_1/moving_variance"
  input: "gen/BatchNorm_1/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_1/moving_variance/read"
  op: "Identity"
  input: "gen/BatchNorm_1/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/moments/mean"
  op: "Mean"
  input: "gen/conv3d_transpose_1"
  input: "gen/BatchNorm_1/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "gen/BatchNorm_1/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gen/conv3d_transpose_1"
  input: "gen/BatchNorm_1/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_1/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/moments/variance"
  op: "Mean"
  input: "gen/BatchNorm_1/moments/SquaredDifference"
  input: "gen/BatchNorm_1/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_1/moments/Squeeze"
  op: "Squeeze"
  input: "gen/BatchNorm_1/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/moments/Squeeze_1"
  op: "Squeeze"
  input: "gen/BatchNorm_1/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "gen/BatchNorm_1/moving_mean/read"
  input: "gen/BatchNorm_1/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "gen/BatchNorm_1/AssignMovingAvg/sub"
  input: "gen/BatchNorm_1/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg"
  op: "AssignSub"
  input: "gen/BatchNorm_1/moving_mean"
  input: "gen/BatchNorm_1/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "gen/BatchNorm_1/moving_variance/read"
  input: "gen/BatchNorm_1/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "gen/BatchNorm_1/AssignMovingAvg_1/sub"
  input: "gen/BatchNorm_1/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "gen/BatchNorm_1/moving_variance"
  input: "gen/BatchNorm_1/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/BatchNorm_1/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/batchnorm/add"
  op: "Add"
  input: "gen/BatchNorm_1/moments/Squeeze_1"
  input: "gen/BatchNorm_1/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "gen/BatchNorm_1/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_1/batchnorm/mul"
  op: "Mul"
  input: "gen/conv3d_transpose_1"
  input: "gen/BatchNorm_1/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "gen/BatchNorm_1/moments/Squeeze"
  input: "gen/BatchNorm_1/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_1/batchnorm/sub"
  op: "Sub"
  input: "gen/BatchNorm_1/beta/read"
  input: "gen/BatchNorm_1/batchnorm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_1/batchnorm/add_1"
  op: "Add"
  input: "gen/BatchNorm_1/batchnorm/mul"
  input: "gen/BatchNorm_1/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/Relu_1"
  op: "Relu"
  input: "gen/BatchNorm_1/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/conv3d_transpose_2/output_shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gen/conv3d_transpose_2"
  op: "Conv3DBackpropInputV2"
  input: "gen/conv3d_transpose_2/output_shape"
  input: "wg3/read"
  input: "gen/Relu_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Assign"
  op: "Assign"
  input: "gen/BatchNorm_2/beta"
  input: "gen/BatchNorm_2/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/read"
  op: "Identity"
  input: "gen/BatchNorm_2/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_mean/Assign"
  op: "Assign"
  input: "gen/BatchNorm_2/moving_mean"
  input: "gen/BatchNorm_2/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_mean/read"
  op: "Identity"
  input: "gen/BatchNorm_2/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_variance/Assign"
  op: "Assign"
  input: "gen/BatchNorm_2/moving_variance"
  input: "gen/BatchNorm_2/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_2/moving_variance/read"
  op: "Identity"
  input: "gen/BatchNorm_2/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/moments/mean"
  op: "Mean"
  input: "gen/conv3d_transpose_2"
  input: "gen/BatchNorm_2/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_2/moments/StopGradient"
  op: "StopGradient"
  input: "gen/BatchNorm_2/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_2/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gen/conv3d_transpose_2"
  input: "gen/BatchNorm_2/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_2/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/moments/variance"
  op: "Mean"
  input: "gen/BatchNorm_2/moments/SquaredDifference"
  input: "gen/BatchNorm_2/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_2/moments/Squeeze"
  op: "Squeeze"
  input: "gen/BatchNorm_2/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/moments/Squeeze_1"
  op: "Squeeze"
  input: "gen/BatchNorm_2/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg/sub"
  op: "Sub"
  input: "gen/BatchNorm_2/moving_mean/read"
  input: "gen/BatchNorm_2/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg/mul"
  op: "Mul"
  input: "gen/BatchNorm_2/AssignMovingAvg/sub"
  input: "gen/BatchNorm_2/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg"
  op: "AssignSub"
  input: "gen/BatchNorm_2/moving_mean"
  input: "gen/BatchNorm_2/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "gen/BatchNorm_2/moving_variance/read"
  input: "gen/BatchNorm_2/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "gen/BatchNorm_2/AssignMovingAvg_1/sub"
  input: "gen/BatchNorm_2/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/AssignMovingAvg_1"
  op: "AssignSub"
  input: "gen/BatchNorm_2/moving_variance"
  input: "gen/BatchNorm_2/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/BatchNorm_2/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/batchnorm/add"
  op: "Add"
  input: "gen/BatchNorm_2/moments/Squeeze_1"
  input: "gen/BatchNorm_2/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_2/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "gen/BatchNorm_2/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_2/batchnorm/mul"
  op: "Mul"
  input: "gen/conv3d_transpose_2"
  input: "gen/BatchNorm_2/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_2/batchnorm/mul_1"
  op: "Mul"
  input: "gen/BatchNorm_2/moments/Squeeze"
  input: "gen/BatchNorm_2/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_2/batchnorm/sub"
  op: "Sub"
  input: "gen/BatchNorm_2/beta/read"
  input: "gen/BatchNorm_2/batchnorm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_2/batchnorm/add_1"
  op: "Add"
  input: "gen/BatchNorm_2/batchnorm/mul"
  input: "gen/BatchNorm_2/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/Relu_2"
  op: "Relu"
  input: "gen/BatchNorm_2/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/conv3d_transpose_3/output_shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gen/conv3d_transpose_3"
  op: "Conv3DBackpropInputV2"
  input: "gen/conv3d_transpose_3/output_shape"
  input: "wg4/read"
  input: "gen/Relu_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Assign"
  op: "Assign"
  input: "gen/BatchNorm_3/beta"
  input: "gen/BatchNorm_3/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/read"
  op: "Identity"
  input: "gen/BatchNorm_3/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_mean/Assign"
  op: "Assign"
  input: "gen/BatchNorm_3/moving_mean"
  input: "gen/BatchNorm_3/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_mean/read"
  op: "Identity"
  input: "gen/BatchNorm_3/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_variance/Assign"
  op: "Assign"
  input: "gen/BatchNorm_3/moving_variance"
  input: "gen/BatchNorm_3/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_3/moving_variance/read"
  op: "Identity"
  input: "gen/BatchNorm_3/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/moments/mean"
  op: "Mean"
  input: "gen/conv3d_transpose_3"
  input: "gen/BatchNorm_3/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_3/moments/StopGradient"
  op: "StopGradient"
  input: "gen/BatchNorm_3/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_3/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gen/conv3d_transpose_3"
  input: "gen/BatchNorm_3/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_3/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/moments/variance"
  op: "Mean"
  input: "gen/BatchNorm_3/moments/SquaredDifference"
  input: "gen/BatchNorm_3/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_3/moments/Squeeze"
  op: "Squeeze"
  input: "gen/BatchNorm_3/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/moments/Squeeze_1"
  op: "Squeeze"
  input: "gen/BatchNorm_3/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg/sub"
  op: "Sub"
  input: "gen/BatchNorm_3/moving_mean/read"
  input: "gen/BatchNorm_3/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg/mul"
  op: "Mul"
  input: "gen/BatchNorm_3/AssignMovingAvg/sub"
  input: "gen/BatchNorm_3/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg"
  op: "AssignSub"
  input: "gen/BatchNorm_3/moving_mean"
  input: "gen/BatchNorm_3/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "gen/BatchNorm_3/moving_variance/read"
  input: "gen/BatchNorm_3/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "gen/BatchNorm_3/AssignMovingAvg_1/sub"
  input: "gen/BatchNorm_3/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/AssignMovingAvg_1"
  op: "AssignSub"
  input: "gen/BatchNorm_3/moving_variance"
  input: "gen/BatchNorm_3/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gen/BatchNorm_3/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/batchnorm/add"
  op: "Add"
  input: "gen/BatchNorm_3/moments/Squeeze_1"
  input: "gen/BatchNorm_3/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_3/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "gen/BatchNorm_3/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_3/batchnorm/mul"
  op: "Mul"
  input: "gen/conv3d_transpose_3"
  input: "gen/BatchNorm_3/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_3/batchnorm/mul_1"
  op: "Mul"
  input: "gen/BatchNorm_3/moments/Squeeze"
  input: "gen/BatchNorm_3/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_3/batchnorm/sub"
  op: "Sub"
  input: "gen/BatchNorm_3/beta/read"
  input: "gen/BatchNorm_3/batchnorm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/BatchNorm_3/batchnorm/add_1"
  op: "Add"
  input: "gen/BatchNorm_3/batchnorm/mul"
  input: "gen/BatchNorm_3/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/Relu_3"
  op: "Relu"
  input: "gen/BatchNorm_3/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen/conv3d_transpose_4/output_shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000@\000\000\000@\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gen/conv3d_transpose_4"
  op: "Conv3DBackpropInputV2"
  input: "gen/conv3d_transpose_4/output_shape"
  input: "wg5/read"
  input: "gen/Relu_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gen/gen_tanh"
  op: "Tanh"
  input: "gen/conv3d_transpose_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/Conv3D"
  op: "Conv3D"
  input: "Placeholder"
  input: "wd1/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "dis/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm/beta/Assign"
  op: "Assign"
  input: "dis/BatchNorm/beta"
  input: "dis/BatchNorm/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm/beta/read"
  op: "Identity"
  input: "dis/BatchNorm/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "dis/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "dis/BatchNorm/moving_mean"
  input: "dis/BatchNorm/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "dis/BatchNorm/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "dis/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "dis/BatchNorm/moving_variance"
  input: "dis/BatchNorm/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "dis/BatchNorm/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "dis/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis/BatchNorm/moments/mean"
  op: "Mean"
  input: "dis/Conv3D"
  input: "dis/BatchNorm/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "dis/BatchNorm/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "dis/Conv3D"
  input: "dis/BatchNorm/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis/BatchNorm/moments/variance"
  op: "Mean"
  input: "dis/BatchNorm/moments/SquaredDifference"
  input: "dis/BatchNorm/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "dis/BatchNorm/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "dis/BatchNorm/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "dis/BatchNorm/moving_mean/read"
  input: "dis/BatchNorm/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "dis/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "dis/BatchNorm/AssignMovingAvg/sub"
  input: "dis/BatchNorm/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "dis/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "dis/BatchNorm/moving_mean"
  input: "dis/BatchNorm/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "dis/BatchNorm/moving_variance/read"
  input: "dis/BatchNorm/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "dis/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "dis/BatchNorm/AssignMovingAvg_1/sub"
  input: "dis/BatchNorm/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "dis/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "dis/BatchNorm/moving_variance"
  input: "dis/BatchNorm/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis/BatchNorm/batchnorm_1/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis/BatchNorm/batchnorm_1/add"
  op: "Add"
  input: "dis/BatchNorm/moments/Squeeze_1"
  input: "dis/BatchNorm/batchnorm_1/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "dis/BatchNorm/batchnorm_1/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "dis/Conv3D"
  input: "dis/BatchNorm/batchnorm_1/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "dis/BatchNorm/moments/Squeeze"
  input: "dis/BatchNorm/batchnorm_1/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "dis/BatchNorm/beta/read"
  input: "dis/BatchNorm/batchnorm_1/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm/batchnorm_1/add_1"
  op: "Add"
  input: "dis/BatchNorm/batchnorm_1/mul"
  input: "dis/BatchNorm/batchnorm_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/mul/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "dis/mul"
  op: "Mul"
  input: "dis/mul/x"
  input: "dis/BatchNorm/batchnorm_1/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/Maximum"
  op: "Maximum"
  input: "dis/BatchNorm/batchnorm_1/add_1"
  input: "dis/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/Conv3D_1"
  op: "Conv3D"
  input: "dis/Maximum"
  input: "wd2/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm_1/beta/Assign"
  op: "Assign"
  input: "dis/BatchNorm_1/beta"
  input: "dis/BatchNorm_1/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_1/beta/read"
  op: "Identity"
  input: "dis/BatchNorm_1/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm_1/moving_mean/Assign"
  op: "Assign"
  input: "dis/BatchNorm_1/moving_mean"
  input: "dis/BatchNorm_1/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_1/moving_mean/read"
  op: "Identity"
  input: "dis/BatchNorm_1/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm_1/moving_variance/Assign"
  op: "Assign"
  input: "dis/BatchNorm_1/moving_variance"
  input: "dis/BatchNorm_1/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_1/moving_variance/read"
  op: "Identity"
  input: "dis/BatchNorm_1/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/moments/mean"
  op: "Mean"
  input: "dis/Conv3D_1"
  input: "dis/BatchNorm_1/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "dis/BatchNorm_1/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "dis/Conv3D_1"
  input: "dis/BatchNorm_1/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_1/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/moments/variance"
  op: "Mean"
  input: "dis/BatchNorm_1/moments/SquaredDifference"
  input: "dis/BatchNorm_1/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_1/moments/Squeeze"
  op: "Squeeze"
  input: "dis/BatchNorm_1/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/moments/Squeeze_1"
  op: "Squeeze"
  input: "dis/BatchNorm_1/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "dis/BatchNorm_1/moving_mean/read"
  input: "dis/BatchNorm_1/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "dis/BatchNorm_1/AssignMovingAvg/sub"
  input: "dis/BatchNorm_1/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/AssignMovingAvg"
  op: "AssignSub"
  input: "dis/BatchNorm_1/moving_mean"
  input: "dis/BatchNorm_1/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis/BatchNorm_1/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "dis/BatchNorm_1/moving_variance/read"
  input: "dis/BatchNorm_1/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "dis/BatchNorm_1/AssignMovingAvg_1/sub"
  input: "dis/BatchNorm_1/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "dis/BatchNorm_1/moving_variance"
  input: "dis/BatchNorm_1/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis/BatchNorm_1/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/batchnorm/add"
  op: "Add"
  input: "dis/BatchNorm_1/moments/Squeeze_1"
  input: "dis/BatchNorm_1/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "dis/BatchNorm_1/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_1/batchnorm/mul"
  op: "Mul"
  input: "dis/Conv3D_1"
  input: "dis/BatchNorm_1/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "dis/BatchNorm_1/moments/Squeeze"
  input: "dis/BatchNorm_1/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_1/batchnorm/sub"
  op: "Sub"
  input: "dis/BatchNorm_1/beta/read"
  input: "dis/BatchNorm_1/batchnorm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_1/batchnorm/add_1"
  op: "Add"
  input: "dis/BatchNorm_1/batchnorm/mul"
  input: "dis/BatchNorm_1/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/mul_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "dis/mul_1"
  op: "Mul"
  input: "dis/mul_1/x"
  input: "dis/BatchNorm_1/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/Maximum_1"
  op: "Maximum"
  input: "dis/BatchNorm_1/batchnorm/add_1"
  input: "dis/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/Conv3D_2"
  op: "Conv3D"
  input: "dis/Maximum_1"
  input: "wd3/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm_2/beta/Assign"
  op: "Assign"
  input: "dis/BatchNorm_2/beta"
  input: "dis/BatchNorm_2/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_2/beta/read"
  op: "Identity"
  input: "dis/BatchNorm_2/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm_2/moving_mean/Assign"
  op: "Assign"
  input: "dis/BatchNorm_2/moving_mean"
  input: "dis/BatchNorm_2/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_2/moving_mean/read"
  op: "Identity"
  input: "dis/BatchNorm_2/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_mean"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm_2/moving_variance/Assign"
  op: "Assign"
  input: "dis/BatchNorm_2/moving_variance"
  input: "dis/BatchNorm_2/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_2/moving_variance/read"
  op: "Identity"
  input: "dis/BatchNorm_2/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_variance"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/moments/mean"
  op: "Mean"
  input: "dis/Conv3D_2"
  input: "dis/BatchNorm_2/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_2/moments/StopGradient"
  op: "StopGradient"
  input: "dis/BatchNorm_2/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_2/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "dis/Conv3D_2"
  input: "dis/BatchNorm_2/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_2/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/moments/variance"
  op: "Mean"
  input: "dis/BatchNorm_2/moments/SquaredDifference"
  input: "dis/BatchNorm_2/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_2/moments/Squeeze"
  op: "Squeeze"
  input: "dis/BatchNorm_2/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/moments/Squeeze_1"
  op: "Squeeze"
  input: "dis/BatchNorm_2/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/AssignMovingAvg/sub"
  op: "Sub"
  input: "dis/BatchNorm_2/moving_mean/read"
  input: "dis/BatchNorm_2/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_mean"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/AssignMovingAvg/mul"
  op: "Mul"
  input: "dis/BatchNorm_2/AssignMovingAvg/sub"
  input: "dis/BatchNorm_2/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_mean"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/AssignMovingAvg"
  op: "AssignSub"
  input: "dis/BatchNorm_2/moving_mean"
  input: "dis/BatchNorm_2/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis/BatchNorm_2/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "dis/BatchNorm_2/moving_variance/read"
  input: "dis/BatchNorm_2/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_variance"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "dis/BatchNorm_2/AssignMovingAvg_1/sub"
  input: "dis/BatchNorm_2/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_variance"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/AssignMovingAvg_1"
  op: "AssignSub"
  input: "dis/BatchNorm_2/moving_variance"
  input: "dis/BatchNorm_2/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis/BatchNorm_2/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/batchnorm/add"
  op: "Add"
  input: "dis/BatchNorm_2/moments/Squeeze_1"
  input: "dis/BatchNorm_2/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_2/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "dis/BatchNorm_2/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_2/batchnorm/mul"
  op: "Mul"
  input: "dis/Conv3D_2"
  input: "dis/BatchNorm_2/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_2/batchnorm/mul_1"
  op: "Mul"
  input: "dis/BatchNorm_2/moments/Squeeze"
  input: "dis/BatchNorm_2/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_2/batchnorm/sub"
  op: "Sub"
  input: "dis/BatchNorm_2/beta/read"
  input: "dis/BatchNorm_2/batchnorm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_2/batchnorm/add_1"
  op: "Add"
  input: "dis/BatchNorm_2/batchnorm/mul"
  input: "dis/BatchNorm_2/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/mul_2/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "dis/mul_2"
  op: "Mul"
  input: "dis/mul_2/x"
  input: "dis/BatchNorm_2/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/Maximum_2"
  op: "Maximum"
  input: "dis/BatchNorm_2/batchnorm/add_1"
  input: "dis/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/Conv3D_3"
  op: "Conv3D"
  input: "dis/Maximum_2"
  input: "wd4/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm_3/beta/Assign"
  op: "Assign"
  input: "dis/BatchNorm_3/beta"
  input: "dis/BatchNorm_3/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_3/beta/read"
  op: "Identity"
  input: "dis/BatchNorm_3/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm_3/moving_mean/Assign"
  op: "Assign"
  input: "dis/BatchNorm_3/moving_mean"
  input: "dis/BatchNorm_3/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_3/moving_mean/read"
  op: "Identity"
  input: "dis/BatchNorm_3/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_mean"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm_3/moving_variance/Assign"
  op: "Assign"
  input: "dis/BatchNorm_3/moving_variance"
  input: "dis/BatchNorm_3/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_3/moving_variance/read"
  op: "Identity"
  input: "dis/BatchNorm_3/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_variance"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/moments/mean"
  op: "Mean"
  input: "dis/Conv3D_3"
  input: "dis/BatchNorm_3/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_3/moments/StopGradient"
  op: "StopGradient"
  input: "dis/BatchNorm_3/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_3/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "dis/Conv3D_3"
  input: "dis/BatchNorm_3/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_3/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/moments/variance"
  op: "Mean"
  input: "dis/BatchNorm_3/moments/SquaredDifference"
  input: "dis/BatchNorm_3/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_3/moments/Squeeze"
  op: "Squeeze"
  input: "dis/BatchNorm_3/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/moments/Squeeze_1"
  op: "Squeeze"
  input: "dis/BatchNorm_3/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/AssignMovingAvg/sub"
  op: "Sub"
  input: "dis/BatchNorm_3/moving_mean/read"
  input: "dis/BatchNorm_3/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_mean"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/AssignMovingAvg/mul"
  op: "Mul"
  input: "dis/BatchNorm_3/AssignMovingAvg/sub"
  input: "dis/BatchNorm_3/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_mean"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/AssignMovingAvg"
  op: "AssignSub"
  input: "dis/BatchNorm_3/moving_mean"
  input: "dis/BatchNorm_3/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis/BatchNorm_3/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "dis/BatchNorm_3/moving_variance/read"
  input: "dis/BatchNorm_3/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_variance"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "dis/BatchNorm_3/AssignMovingAvg_1/sub"
  input: "dis/BatchNorm_3/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_variance"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/AssignMovingAvg_1"
  op: "AssignSub"
  input: "dis/BatchNorm_3/moving_variance"
  input: "dis/BatchNorm_3/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis/BatchNorm_3/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/batchnorm/add"
  op: "Add"
  input: "dis/BatchNorm_3/moments/Squeeze_1"
  input: "dis/BatchNorm_3/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_3/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "dis/BatchNorm_3/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_3/batchnorm/mul"
  op: "Mul"
  input: "dis/Conv3D_3"
  input: "dis/BatchNorm_3/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_3/batchnorm/mul_1"
  op: "Mul"
  input: "dis/BatchNorm_3/moments/Squeeze"
  input: "dis/BatchNorm_3/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_3/batchnorm/sub"
  op: "Sub"
  input: "dis/BatchNorm_3/beta/read"
  input: "dis/BatchNorm_3/batchnorm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/BatchNorm_3/batchnorm/add_1"
  op: "Add"
  input: "dis/BatchNorm_3/batchnorm/mul"
  input: "dis/BatchNorm_3/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/mul_3/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "dis/mul_3"
  op: "Mul"
  input: "dis/mul_3/x"
  input: "dis/BatchNorm_3/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/Maximum_3"
  op: "Maximum"
  input: "dis/BatchNorm_3/batchnorm/add_1"
  input: "dis/mul_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis/Conv3D_4"
  op: "Conv3D"
  input: "dis/Maximum_3"
  input: "wd5/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "dis/Sigmoid"
  op: "Sigmoid"
  input: "dis/Conv3D_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "Minimum"
  op: "Minimum"
  input: "dis/Sigmoid"
  input: "Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "Maximum"
  op: "Maximum"
  input: "Minimum"
  input: "Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_prob_x/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "d_prob_x"
      }
    }
  }
}
node {
  name: "d_prob_x"
  op: "HistogramSummary"
  input: "d_prob_x/tag"
  input: "Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/Conv3D"
  op: "Conv3D"
  input: "gen/gen_tanh"
  input: "wd1/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "dis_1/Conv3D"
  input: "dis_1/BatchNorm/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "dis_1/BatchNorm/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "dis_1/Conv3D"
  input: "dis_1/BatchNorm/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "dis_1/BatchNorm/moments/SquaredDifference"
  input: "dis_1/BatchNorm/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "dis_1/BatchNorm/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "dis_1/BatchNorm/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "dis/BatchNorm/moving_mean/read"
  input: "dis_1/BatchNorm/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "dis_1/BatchNorm/AssignMovingAvg/sub"
  input: "dis_1/BatchNorm/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "dis/BatchNorm/moving_mean"
  input: "dis_1/BatchNorm/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "dis/BatchNorm/moving_variance/read"
  input: "dis_1/BatchNorm/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "dis_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "dis_1/BatchNorm/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "dis/BatchNorm/moving_variance"
  input: "dis_1/BatchNorm/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis_1/BatchNorm/batchnorm_1/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm/batchnorm_1/add"
  op: "Add"
  input: "dis_1/BatchNorm/moments/Squeeze_1"
  input: "dis_1/BatchNorm/batchnorm_1/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "dis_1/BatchNorm/batchnorm_1/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "dis_1/Conv3D"
  input: "dis_1/BatchNorm/batchnorm_1/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "dis_1/BatchNorm/moments/Squeeze"
  input: "dis_1/BatchNorm/batchnorm_1/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "dis/BatchNorm/beta/read"
  input: "dis_1/BatchNorm/batchnorm_1/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm/batchnorm_1/add_1"
  op: "Add"
  input: "dis_1/BatchNorm/batchnorm_1/mul"
  input: "dis_1/BatchNorm/batchnorm_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/mul/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "dis_1/mul"
  op: "Mul"
  input: "dis_1/mul/x"
  input: "dis_1/BatchNorm/batchnorm_1/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/Maximum"
  op: "Maximum"
  input: "dis_1/BatchNorm/batchnorm_1/add_1"
  input: "dis_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/Conv3D_1"
  op: "Conv3D"
  input: "dis_1/Maximum"
  input: "wd2/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/moments/mean"
  op: "Mean"
  input: "dis_1/Conv3D_1"
  input: "dis_1/BatchNorm_1/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "dis_1/BatchNorm_1/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "dis_1/Conv3D_1"
  input: "dis_1/BatchNorm_1/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/moments/variance"
  op: "Mean"
  input: "dis_1/BatchNorm_1/moments/SquaredDifference"
  input: "dis_1/BatchNorm_1/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/moments/Squeeze"
  op: "Squeeze"
  input: "dis_1/BatchNorm_1/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/moments/Squeeze_1"
  op: "Squeeze"
  input: "dis_1/BatchNorm_1/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "dis/BatchNorm_1/moving_mean/read"
  input: "dis_1/BatchNorm_1/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "dis_1/BatchNorm_1/AssignMovingAvg/sub"
  input: "dis_1/BatchNorm_1/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/AssignMovingAvg"
  op: "AssignSub"
  input: "dis/BatchNorm_1/moving_mean"
  input: "dis_1/BatchNorm_1/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "dis/BatchNorm_1/moving_variance/read"
  input: "dis_1/BatchNorm_1/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "dis_1/BatchNorm_1/AssignMovingAvg_1/sub"
  input: "dis_1/BatchNorm_1/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "dis/BatchNorm_1/moving_variance"
  input: "dis_1/BatchNorm_1/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/batchnorm/add"
  op: "Add"
  input: "dis_1/BatchNorm_1/moments/Squeeze_1"
  input: "dis_1/BatchNorm_1/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "dis_1/BatchNorm_1/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/batchnorm/mul"
  op: "Mul"
  input: "dis_1/Conv3D_1"
  input: "dis_1/BatchNorm_1/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "dis_1/BatchNorm_1/moments/Squeeze"
  input: "dis_1/BatchNorm_1/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/batchnorm/sub"
  op: "Sub"
  input: "dis/BatchNorm_1/beta/read"
  input: "dis_1/BatchNorm_1/batchnorm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_1/batchnorm/add_1"
  op: "Add"
  input: "dis_1/BatchNorm_1/batchnorm/mul"
  input: "dis_1/BatchNorm_1/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/mul_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "dis_1/mul_1"
  op: "Mul"
  input: "dis_1/mul_1/x"
  input: "dis_1/BatchNorm_1/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/Maximum_1"
  op: "Maximum"
  input: "dis_1/BatchNorm_1/batchnorm/add_1"
  input: "dis_1/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/Conv3D_2"
  op: "Conv3D"
  input: "dis_1/Maximum_1"
  input: "wd3/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/moments/mean"
  op: "Mean"
  input: "dis_1/Conv3D_2"
  input: "dis_1/BatchNorm_2/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/moments/StopGradient"
  op: "StopGradient"
  input: "dis_1/BatchNorm_2/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "dis_1/Conv3D_2"
  input: "dis_1/BatchNorm_2/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/moments/variance"
  op: "Mean"
  input: "dis_1/BatchNorm_2/moments/SquaredDifference"
  input: "dis_1/BatchNorm_2/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/moments/Squeeze"
  op: "Squeeze"
  input: "dis_1/BatchNorm_2/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/moments/Squeeze_1"
  op: "Squeeze"
  input: "dis_1/BatchNorm_2/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/AssignMovingAvg/sub"
  op: "Sub"
  input: "dis/BatchNorm_2/moving_mean/read"
  input: "dis_1/BatchNorm_2/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_mean"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/AssignMovingAvg/mul"
  op: "Mul"
  input: "dis_1/BatchNorm_2/AssignMovingAvg/sub"
  input: "dis_1/BatchNorm_2/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_mean"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/AssignMovingAvg"
  op: "AssignSub"
  input: "dis/BatchNorm_2/moving_mean"
  input: "dis_1/BatchNorm_2/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "dis/BatchNorm_2/moving_variance/read"
  input: "dis_1/BatchNorm_2/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_variance"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "dis_1/BatchNorm_2/AssignMovingAvg_1/sub"
  input: "dis_1/BatchNorm_2/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_variance"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/AssignMovingAvg_1"
  op: "AssignSub"
  input: "dis/BatchNorm_2/moving_variance"
  input: "dis_1/BatchNorm_2/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/batchnorm/add"
  op: "Add"
  input: "dis_1/BatchNorm_2/moments/Squeeze_1"
  input: "dis_1/BatchNorm_2/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "dis_1/BatchNorm_2/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/batchnorm/mul"
  op: "Mul"
  input: "dis_1/Conv3D_2"
  input: "dis_1/BatchNorm_2/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/batchnorm/mul_1"
  op: "Mul"
  input: "dis_1/BatchNorm_2/moments/Squeeze"
  input: "dis_1/BatchNorm_2/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/batchnorm/sub"
  op: "Sub"
  input: "dis/BatchNorm_2/beta/read"
  input: "dis_1/BatchNorm_2/batchnorm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_2/batchnorm/add_1"
  op: "Add"
  input: "dis_1/BatchNorm_2/batchnorm/mul"
  input: "dis_1/BatchNorm_2/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/mul_2/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "dis_1/mul_2"
  op: "Mul"
  input: "dis_1/mul_2/x"
  input: "dis_1/BatchNorm_2/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/Maximum_2"
  op: "Maximum"
  input: "dis_1/BatchNorm_2/batchnorm/add_1"
  input: "dis_1/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/Conv3D_3"
  op: "Conv3D"
  input: "dis_1/Maximum_2"
  input: "wd4/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/moments/mean"
  op: "Mean"
  input: "dis_1/Conv3D_3"
  input: "dis_1/BatchNorm_3/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/moments/StopGradient"
  op: "StopGradient"
  input: "dis_1/BatchNorm_3/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "dis_1/Conv3D_3"
  input: "dis_1/BatchNorm_3/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/moments/variance"
  op: "Mean"
  input: "dis_1/BatchNorm_3/moments/SquaredDifference"
  input: "dis_1/BatchNorm_3/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/moments/Squeeze"
  op: "Squeeze"
  input: "dis_1/BatchNorm_3/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/moments/Squeeze_1"
  op: "Squeeze"
  input: "dis_1/BatchNorm_3/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/AssignMovingAvg/sub"
  op: "Sub"
  input: "dis/BatchNorm_3/moving_mean/read"
  input: "dis_1/BatchNorm_3/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_mean"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/AssignMovingAvg/mul"
  op: "Mul"
  input: "dis_1/BatchNorm_3/AssignMovingAvg/sub"
  input: "dis_1/BatchNorm_3/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_mean"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/AssignMovingAvg"
  op: "AssignSub"
  input: "dis/BatchNorm_3/moving_mean"
  input: "dis_1/BatchNorm_3/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "dis/BatchNorm_3/moving_variance/read"
  input: "dis_1/BatchNorm_3/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_variance"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "dis_1/BatchNorm_3/AssignMovingAvg_1/sub"
  input: "dis_1/BatchNorm_3/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_variance"
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/AssignMovingAvg_1"
  op: "AssignSub"
  input: "dis/BatchNorm_3/moving_variance"
  input: "dis_1/BatchNorm_3/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/batchnorm/add"
  op: "Add"
  input: "dis_1/BatchNorm_3/moments/Squeeze_1"
  input: "dis_1/BatchNorm_3/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "dis_1/BatchNorm_3/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/batchnorm/mul"
  op: "Mul"
  input: "dis_1/Conv3D_3"
  input: "dis_1/BatchNorm_3/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/batchnorm/mul_1"
  op: "Mul"
  input: "dis_1/BatchNorm_3/moments/Squeeze"
  input: "dis_1/BatchNorm_3/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/batchnorm/sub"
  op: "Sub"
  input: "dis/BatchNorm_3/beta/read"
  input: "dis_1/BatchNorm_3/batchnorm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/BatchNorm_3/batchnorm/add_1"
  op: "Add"
  input: "dis_1/BatchNorm_3/batchnorm/mul"
  input: "dis_1/BatchNorm_3/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/mul_3/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "dis_1/mul_3"
  op: "Mul"
  input: "dis_1/mul_3/x"
  input: "dis_1/BatchNorm_3/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/Maximum_3"
  op: "Maximum"
  input: "dis_1/BatchNorm_3/batchnorm/add_1"
  input: "dis_1/mul_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dis_1/Conv3D_4"
  op: "Conv3D"
  input: "dis_1/Maximum_3"
  input: "wd5/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "dis_1/Sigmoid"
  op: "Sigmoid"
  input: "dis_1/Conv3D_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Minimum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "Minimum_1"
  op: "Minimum"
  input: "dis_1/Sigmoid"
  input: "Minimum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "Maximum_1"
  op: "Maximum"
  input: "Minimum_1"
  input: "Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "d_prob_z/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "d_prob_z"
      }
    }
  }
}
node {
  name: "d_prob_z"
  op: "HistogramSummary"
  input: "d_prob_z/tag"
  input: "Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Greater/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Greater"
  op: "Greater"
  input: "Maximum"
  input: "Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Greater"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "Cast"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Less"
  op: "Less"
  input: "Maximum_1"
  input: "Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "Cast_1"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "Sum"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "truediv/Cast"
  op: "Cast"
  input: "add"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "truediv/Cast_1"
  op: "Cast"
  input: "truediv/y"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "truediv/Cast"
  input: "truediv/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "ones_like/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ones_like"
  op: "Fill"
  input: "ones_like/Shape"
  input: "ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "logistic_loss/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "dis/Conv3D_4"
  input: "logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/Select"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "dis/Conv3D_4"
  input: "logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/Neg"
  op: "Neg"
  input: "dis/Conv3D_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/Select_1"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "logistic_loss/Neg"
  input: "dis/Conv3D_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/mul"
  op: "Mul"
  input: "dis/Conv3D_4"
  input: "ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/sub"
  op: "Sub"
  input: "logistic_loss/Select"
  input: "logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/Exp"
  op: "Exp"
  input: "logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss/Log1p"
  op: "Log1p"
  input: "logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss"
  op: "Add"
  input: "logistic_loss/sub"
  input: "logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "logistic_loss_1/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "logistic_loss_1/GreaterEqual"
  op: "GreaterEqual"
  input: "dis_1/Conv3D_4"
  input: "logistic_loss_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss_1/Select"
  op: "Select"
  input: "logistic_loss_1/GreaterEqual"
  input: "dis_1/Conv3D_4"
  input: "logistic_loss_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss_1/Neg"
  op: "Neg"
  input: "dis_1/Conv3D_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss_1/Select_1"
  op: "Select"
  input: "logistic_loss_1/GreaterEqual"
  input: "logistic_loss_1/Neg"
  input: "dis_1/Conv3D_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss_1/mul"
  op: "Mul"
  input: "dis_1/Conv3D_4"
  input: "zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss_1/sub"
  op: "Sub"
  input: "logistic_loss_1/Select"
  input: "logistic_loss_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss_1/Exp"
  op: "Exp"
  input: "logistic_loss_1/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss_1/Log1p"
  op: "Log1p"
  input: "logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "logistic_loss_1"
  op: "Add"
  input: "logistic_loss_1/sub"
  input: "logistic_loss_1/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "logistic_loss"
  input: "logistic_loss_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ones_like_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ones_like_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ones_like_1"
  op: "Fill"
  input: "ones_like_1/Shape"
  input: "ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "g_loss/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "g_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "dis_1/Conv3D_4"
  input: "g_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/Select"
  op: "Select"
  input: "g_loss/GreaterEqual"
  input: "dis_1/Conv3D_4"
  input: "g_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/Neg"
  op: "Neg"
  input: "dis_1/Conv3D_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/Select_1"
  op: "Select"
  input: "g_loss/GreaterEqual"
  input: "g_loss/Neg"
  input: "dis_1/Conv3D_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/mul"
  op: "Mul"
  input: "dis_1/Conv3D_4"
  input: "ones_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/sub"
  op: "Sub"
  input: "g_loss/Select"
  input: "g_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/Exp"
  op: "Exp"
  input: "g_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss/Log1p"
  op: "Log1p"
  input: "g_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss"
  op: "Add"
  input: "g_loss/sub"
  input: "g_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "add_1"
  input: "Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "g_loss_reduce"
  op: "Mean"
  input: "g_loss"
  input: "Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "d_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "d_loss"
      }
    }
  }
}
node {
  name: "d_loss"
  op: "ScalarSummary"
  input: "d_loss/tags"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g_loss_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "g_loss_1"
      }
    }
  }
}
node {
  name: "g_loss_1"
  op: "ScalarSummary"
  input: "g_loss_1/tags"
  input: "g_loss_reduce"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "n_p_z/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "n_p_z"
      }
    }
  }
}
node {
  name: "n_p_z"
  op: "ScalarSummary"
  input: "n_p_z/tags"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "n_p_x/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "n_p_x"
      }
    }
  }
}
node {
  name: "n_p_x"
  op: "ScalarSummary"
  input: "n_p_x/tags"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "d_acc/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "d_acc"
      }
    }
  }
}
node {
  name: "d_acc"
  op: "ScalarSummary"
  input: "d_acc/tags"
  input: "truediv"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gen_1/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "gen_1/Reshape"
  op: "Reshape"
  input: "input"
  input: "gen_1/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gen_1/conv3d_transpose/output_shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gen_1/conv3d_transpose"
  op: "Conv3DBackpropInputV2"
  input: "gen_1/conv3d_transpose/output_shape"
  input: "wg1/read"
  input: "gen_1/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gen_1/BatchNorm/batchnorm_1/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen_1/BatchNorm/batchnorm_1/add"
  op: "Add"
  input: "gen/BatchNorm/moving_variance/read"
  input: "gen_1/BatchNorm/batchnorm_1/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "gen_1/BatchNorm/batchnorm_1/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm/batchnorm_1/mul"
  op: "Mul"
  input: "gen_1/conv3d_transpose"
  input: "gen_1/BatchNorm/batchnorm_1/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm/batchnorm_1/mul_1"
  op: "Mul"
  input: "gen/BatchNorm/moving_mean/read"
  input: "gen_1/BatchNorm/batchnorm_1/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm/batchnorm_1/sub"
  op: "Sub"
  input: "gen/BatchNorm/beta/read"
  input: "gen_1/BatchNorm/batchnorm_1/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm/batchnorm_1/add_1"
  op: "Add"
  input: "gen_1/BatchNorm/batchnorm_1/mul"
  input: "gen_1/BatchNorm/batchnorm_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/Relu"
  op: "Relu"
  input: "gen_1/BatchNorm/batchnorm_1/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/conv3d_transpose_1/output_shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gen_1/conv3d_transpose_1"
  op: "Conv3DBackpropInputV2"
  input: "gen_1/conv3d_transpose_1/output_shape"
  input: "wg2/read"
  input: "gen_1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gen_1/BatchNorm_1/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen_1/BatchNorm_1/batchnorm/add"
  op: "Add"
  input: "gen/BatchNorm_1/moving_variance/read"
  input: "gen_1/BatchNorm_1/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "gen_1/BatchNorm_1/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm_1/batchnorm/mul"
  op: "Mul"
  input: "gen_1/conv3d_transpose_1"
  input: "gen_1/BatchNorm_1/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "gen/BatchNorm_1/moving_mean/read"
  input: "gen_1/BatchNorm_1/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm_1/batchnorm/sub"
  op: "Sub"
  input: "gen/BatchNorm_1/beta/read"
  input: "gen_1/BatchNorm_1/batchnorm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm_1/batchnorm/add_1"
  op: "Add"
  input: "gen_1/BatchNorm_1/batchnorm/mul"
  input: "gen_1/BatchNorm_1/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/Relu_1"
  op: "Relu"
  input: "gen_1/BatchNorm_1/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/conv3d_transpose_2/output_shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gen_1/conv3d_transpose_2"
  op: "Conv3DBackpropInputV2"
  input: "gen_1/conv3d_transpose_2/output_shape"
  input: "wg3/read"
  input: "gen_1/Relu_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gen_1/BatchNorm_2/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen_1/BatchNorm_2/batchnorm/add"
  op: "Add"
  input: "gen/BatchNorm_2/moving_variance/read"
  input: "gen_1/BatchNorm_2/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm_2/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "gen_1/BatchNorm_2/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm_2/batchnorm/mul"
  op: "Mul"
  input: "gen_1/conv3d_transpose_2"
  input: "gen_1/BatchNorm_2/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm_2/batchnorm/mul_1"
  op: "Mul"
  input: "gen/BatchNorm_2/moving_mean/read"
  input: "gen_1/BatchNorm_2/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm_2/batchnorm/sub"
  op: "Sub"
  input: "gen/BatchNorm_2/beta/read"
  input: "gen_1/BatchNorm_2/batchnorm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm_2/batchnorm/add_1"
  op: "Add"
  input: "gen_1/BatchNorm_2/batchnorm/mul"
  input: "gen_1/BatchNorm_2/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/Relu_2"
  op: "Relu"
  input: "gen_1/BatchNorm_2/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/conv3d_transpose_3/output_shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gen_1/conv3d_transpose_3"
  op: "Conv3DBackpropInputV2"
  input: "gen_1/conv3d_transpose_3/output_shape"
  input: "wg4/read"
  input: "gen_1/Relu_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gen_1/BatchNorm_3/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gen_1/BatchNorm_3/batchnorm/add"
  op: "Add"
  input: "gen/BatchNorm_3/moving_variance/read"
  input: "gen_1/BatchNorm_3/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm_3/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "gen_1/BatchNorm_3/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm_3/batchnorm/mul"
  op: "Mul"
  input: "gen_1/conv3d_transpose_3"
  input: "gen_1/BatchNorm_3/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm_3/batchnorm/mul_1"
  op: "Mul"
  input: "gen/BatchNorm_3/moving_mean/read"
  input: "gen_1/BatchNorm_3/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm_3/batchnorm/sub"
  op: "Sub"
  input: "gen/BatchNorm_3/beta/read"
  input: "gen_1/BatchNorm_3/batchnorm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/BatchNorm_3/batchnorm/add_1"
  op: "Add"
  input: "gen_1/BatchNorm_3/batchnorm/mul"
  input: "gen_1/BatchNorm_3/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/Relu_3"
  op: "Relu"
  input: "gen_1/BatchNorm_3/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gen_1/conv3d_transpose_4/output_shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000@\000\000\000@\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gen_1/conv3d_transpose_4"
  op: "Conv3DBackpropInputV2"
  input: "gen_1/conv3d_transpose_4/output_shape"
  input: "wg5/read"
  input: "gen_1/Relu_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gen_1/gen_tanh"
  op: "Tanh"
  input: "gen_1/conv3d_transpose_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/Mean_grad/Reshape"
  input: "gradients/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Mean_grad/Tile"
  input: "gradients/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Mean_grad/truediv"
}
node {
  name: "gradients/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Mean_grad/truediv"
  input: "^gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_grad/truediv"
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Mean_grad/truediv"
  input: "^gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_grad/truediv"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_1_grad/tuple/control_dependency"
}
node {
  name: "gradients/logistic_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_1_grad/tuple/control_dependency"
  input: "^gradients/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_grad/truediv"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_1_grad/tuple/control_dependency"
  input: "^gradients/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_grad/truediv"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_1_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/logistic_loss_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/logistic_loss_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_grad/truediv"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/logistic_loss_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_grad/truediv"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients/logistic_loss_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss/sub_grad/Neg"
  input: "^gradients/logistic_loss_grad/tuple/control_dependency"
}
node {
  name: "gradients/logistic_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss_grad/tuple/control_dependency"
  input: "^gradients/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_grad/truediv"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss/sub_grad/Neg"
  input: "^gradients/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Log1p_grad/add/x"
  op: "Const"
  input: "^gradients/logistic_loss_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Log1p_grad/add"
  op: "Add"
  input: "gradients/logistic_loss/Log1p_grad/add/x"
  input: "logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "gradients/logistic_loss/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Log1p_grad/mul"
  op: "Mul"
  input: "gradients/logistic_loss_grad/tuple/control_dependency_1"
  input: "gradients/logistic_loss/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/logistic_loss_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss_1/sub_grad/Neg"
  input: "^gradients/logistic_loss_1_grad/tuple/control_dependency"
}
node {
  name: "gradients/logistic_loss_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss_1_grad/tuple/control_dependency"
  input: "^gradients/logistic_loss_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_grad/truediv"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss_1/sub_grad/Neg"
  input: "^gradients/logistic_loss_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss_1/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Log1p_grad/add/x"
  op: "Const"
  input: "^gradients/logistic_loss_1_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Log1p_grad/add"
  op: "Add"
  input: "gradients/logistic_loss_1/Log1p_grad/add/x"
  input: "logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "gradients/logistic_loss_1/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Log1p_grad/mul"
  op: "Mul"
  input: "gradients/logistic_loss_1_grad/tuple/control_dependency_1"
  input: "gradients/logistic_loss_1/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_grad/Select"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "gradients/logistic_loss/sub_grad/tuple/control_dependency"
  input: "gradients/logistic_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_grad/Select_1"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "gradients/logistic_loss/Select_grad/zeros_like"
  input: "gradients/logistic_loss/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss/Select_grad/Select"
  input: "^gradients/logistic_loss/Select_grad/Select_1"
}
node {
  name: "gradients/logistic_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss/Select_grad/Select"
  input: "^gradients/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss/Select_grad/Select_1"
  input: "^gradients/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Mul"
  op: "Mul"
  input: "gradients/logistic_loss/sub_grad/tuple/control_dependency_1"
  input: "ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/logistic_loss/sub_grad/tuple/control_dependency_1"
  input: "dis/Conv3D_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss/mul_grad/Mul"
  input: "^gradients/logistic_loss/mul_grad/Mul_1"
}
node {
  name: "gradients/logistic_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss/mul_grad/Mul"
  input: "^gradients/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss/mul_grad/Mul_1"
  input: "^gradients/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Exp_grad/mul"
  op: "Mul"
  input: "gradients/logistic_loss/Log1p_grad/mul"
  input: "logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Select_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Select_grad/Select"
  op: "Select"
  input: "logistic_loss_1/GreaterEqual"
  input: "gradients/logistic_loss_1/sub_grad/tuple/control_dependency"
  input: "gradients/logistic_loss_1/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Select_grad/Select_1"
  op: "Select"
  input: "logistic_loss_1/GreaterEqual"
  input: "gradients/logistic_loss_1/Select_grad/zeros_like"
  input: "gradients/logistic_loss_1/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss_1/Select_grad/Select"
  input: "^gradients/logistic_loss_1/Select_grad/Select_1"
}
node {
  name: "gradients/logistic_loss_1/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss_1/Select_grad/Select"
  input: "^gradients/logistic_loss_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss_1/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss_1/Select_grad/Select_1"
  input: "^gradients/logistic_loss_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss_1/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients/logistic_loss_1/sub_grad/tuple/control_dependency_1"
  input: "zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss_1/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/logistic_loss_1/sub_grad/tuple/control_dependency_1"
  input: "dis_1/Conv3D_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss_1/mul_grad/Mul"
  input: "^gradients/logistic_loss_1/mul_grad/Mul_1"
}
node {
  name: "gradients/logistic_loss_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss_1/mul_grad/Mul"
  input: "^gradients/logistic_loss_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss_1/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss_1/mul_grad/Mul_1"
  input: "^gradients/logistic_loss_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss_1/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Exp_grad/mul"
  op: "Mul"
  input: "gradients/logistic_loss_1/Log1p_grad/mul"
  input: "logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_1_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_1_grad/Select"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "gradients/logistic_loss/Exp_grad/mul"
  input: "gradients/logistic_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "logistic_loss/GreaterEqual"
  input: "gradients/logistic_loss/Select_1_grad/zeros_like"
  input: "gradients/logistic_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss/Select_1_grad/Select"
  input: "^gradients/logistic_loss/Select_1_grad/Select_1"
}
node {
  name: "gradients/logistic_loss/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss/Select_1_grad/Select"
  input: "^gradients/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss/Select_1_grad/Select_1"
  input: "^gradients/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Select_1_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Select_1_grad/Select"
  op: "Select"
  input: "logistic_loss_1/GreaterEqual"
  input: "gradients/logistic_loss_1/Exp_grad/mul"
  input: "gradients/logistic_loss_1/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Select_1_grad/Select_1"
  op: "Select"
  input: "logistic_loss_1/GreaterEqual"
  input: "gradients/logistic_loss_1/Select_1_grad/zeros_like"
  input: "gradients/logistic_loss_1/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/logistic_loss_1/Select_1_grad/Select"
  input: "^gradients/logistic_loss_1/Select_1_grad/Select_1"
}
node {
  name: "gradients/logistic_loss_1/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/logistic_loss_1/Select_1_grad/Select"
  input: "^gradients/logistic_loss_1/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss_1/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/logistic_loss_1/Select_1_grad/Select_1"
  input: "^gradients/logistic_loss_1/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss_1/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/logistic_loss/Neg_grad/Neg"
  op: "Neg"
  input: "gradients/logistic_loss/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/logistic_loss_1/Neg_grad/Neg"
  op: "Neg"
  input: "gradients/logistic_loss_1/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/logistic_loss/Select_grad/tuple/control_dependency"
  input: "gradients/logistic_loss/mul_grad/tuple/control_dependency"
  input: "gradients/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  input: "gradients/logistic_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_4_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_4_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/dis/Conv3D_4_grad/Shape"
  input: "wd5/read"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_4_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "dis/Maximum_3"
  input: "gradients/dis/Conv3D_4_grad/Shape_1"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/Conv3D_4_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis/Conv3D_4_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/dis/Conv3D_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/Conv3D_4_grad/Conv3DBackpropInputV2"
  input: "^gradients/dis/Conv3D_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Conv3D_4_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/Conv3D_4_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis/Conv3D_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Conv3D_4_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/logistic_loss_1/Select_grad/tuple/control_dependency"
  input: "gradients/logistic_loss_1/mul_grad/tuple/control_dependency"
  input: "gradients/logistic_loss_1/Select_1_grad/tuple/control_dependency_1"
  input: "gradients/logistic_loss_1/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/logistic_loss_1/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_4_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_4_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/dis_1/Conv3D_4_grad/Shape"
  input: "wd5/read"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_4_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "dis_1/Maximum_3"
  input: "gradients/dis_1/Conv3D_4_grad/Shape_1"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/Conv3D_4_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis_1/Conv3D_4_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/dis_1/Conv3D_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/Conv3D_4_grad/Conv3DBackpropInputV2"
  input: "^gradients/dis_1/Conv3D_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Conv3D_4_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/Conv3D_4_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis_1/Conv3D_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Conv3D_4_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_3_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_3_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_3_grad/zeros"
  op: "Fill"
  input: "gradients/dis/Maximum_3_grad/Shape_2"
  input: "gradients/dis/Maximum_3_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_3_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dis/BatchNorm_3/batchnorm/add_1"
  input: "dis/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/Maximum_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/Maximum_3_grad/Shape"
  input: "gradients/dis/Maximum_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_3_grad/Select"
  op: "Select"
  input: "gradients/dis/Maximum_3_grad/GreaterEqual"
  input: "gradients/dis/Conv3D_4_grad/tuple/control_dependency"
  input: "gradients/dis/Maximum_3_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/Maximum_3_grad/Select_1"
  op: "Select"
  input: "gradients/dis/Maximum_3_grad/GreaterEqual"
  input: "gradients/dis/Maximum_3_grad/zeros"
  input: "gradients/dis/Conv3D_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/Maximum_3_grad/Sum"
  op: "Sum"
  input: "gradients/dis/Maximum_3_grad/Select"
  input: "gradients/dis/Maximum_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/Maximum_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/Maximum_3_grad/Sum"
  input: "gradients/dis/Maximum_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/Maximum_3_grad/Select_1"
  input: "gradients/dis/Maximum_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/Maximum_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/Maximum_3_grad/Sum_1"
  input: "gradients/dis/Maximum_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/Maximum_3_grad/Reshape"
  input: "^gradients/dis/Maximum_3_grad/Reshape_1"
}
node {
  name: "gradients/dis/Maximum_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/Maximum_3_grad/Reshape"
  input: "^gradients/dis/Maximum_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Maximum_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/Maximum_3_grad/Reshape_1"
  input: "^gradients/dis/Maximum_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Maximum_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_3_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_3_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_3_grad/zeros"
  op: "Fill"
  input: "gradients/dis_1/Maximum_3_grad/Shape_2"
  input: "gradients/dis_1/Maximum_3_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_3_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dis_1/BatchNorm_3/batchnorm/add_1"
  input: "dis_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/Maximum_3_grad/Shape"
  input: "gradients/dis_1/Maximum_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_3_grad/Select"
  op: "Select"
  input: "gradients/dis_1/Maximum_3_grad/GreaterEqual"
  input: "gradients/dis_1/Conv3D_4_grad/tuple/control_dependency"
  input: "gradients/dis_1/Maximum_3_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_3_grad/Select_1"
  op: "Select"
  input: "gradients/dis_1/Maximum_3_grad/GreaterEqual"
  input: "gradients/dis_1/Maximum_3_grad/zeros"
  input: "gradients/dis_1/Conv3D_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_3_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/Maximum_3_grad/Select"
  input: "gradients/dis_1/Maximum_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/Maximum_3_grad/Sum"
  input: "gradients/dis_1/Maximum_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/Maximum_3_grad/Select_1"
  input: "gradients/dis_1/Maximum_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/Maximum_3_grad/Sum_1"
  input: "gradients/dis_1/Maximum_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/Maximum_3_grad/Reshape"
  input: "^gradients/dis_1/Maximum_3_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/Maximum_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/Maximum_3_grad/Reshape"
  input: "^gradients/dis_1/Maximum_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Maximum_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/Maximum_3_grad/Reshape_1"
  input: "^gradients/dis_1/Maximum_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Maximum_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/dis/Conv3D_4_grad/tuple/control_dependency_1"
  input: "gradients/dis_1/Conv3D_4_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Conv3D_4_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/dis/mul_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis/mul_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/mul_3_grad/Shape"
  input: "gradients/dis/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/dis/Maximum_3_grad/tuple/control_dependency_1"
  input: "dis/BatchNorm_3/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/dis/mul_3_grad/Mul"
  input: "gradients/dis/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/mul_3_grad/Sum"
  input: "gradients/dis/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/mul_3_grad/Mul_1"
  op: "Mul"
  input: "dis/mul_3/x"
  input: "gradients/dis/Maximum_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/mul_3_grad/Mul_1"
  input: "gradients/dis/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/mul_3_grad/Sum_1"
  input: "gradients/dis/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/mul_3_grad/Reshape"
  input: "^gradients/dis/mul_3_grad/Reshape_1"
}
node {
  name: "gradients/dis/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/mul_3_grad/Reshape"
  input: "^gradients/dis/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/mul_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/mul_3_grad/Reshape_1"
  input: "^gradients/dis/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/mul_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/mul_3_grad/Shape"
  input: "gradients/dis_1/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/Maximum_3_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_3/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/mul_3_grad/Mul"
  input: "gradients/dis_1/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/mul_3_grad/Sum"
  input: "gradients/dis_1/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/mul_3_grad/Mul_1"
  op: "Mul"
  input: "dis_1/mul_3/x"
  input: "gradients/dis_1/Maximum_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/mul_3_grad/Mul_1"
  input: "gradients/dis_1/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/mul_3_grad/Sum_1"
  input: "gradients/dis_1/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/mul_3_grad/Reshape"
  input: "^gradients/dis_1/mul_3_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/mul_3_grad/Reshape"
  input: "^gradients/dis_1/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/mul_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/mul_3_grad/Reshape_1"
  input: "^gradients/dis_1/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/mul_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/dis/Maximum_3_grad/tuple/control_dependency"
  input: "gradients/dis/mul_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Maximum_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Shape"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_3"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Sum"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_3"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Sum_1"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Reshape"
  input: "^gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Reshape"
  input: "^gradients/dis/BatchNorm_3/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/dis/BatchNorm_3/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/dis_1/Maximum_3_grad/tuple/control_dependency"
  input: "gradients/dis_1/mul_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Maximum_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Shape"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_4"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Sum"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_4"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Shape"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency"
  input: "dis/BatchNorm_3/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Mul"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Sum"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "dis/Conv3D_3"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Mul_1"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Sum_1"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_3/batchnorm/mul_grad/Reshape"
  input: "^gradients/dis/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Reshape"
  input: "^gradients/dis/BatchNorm_3/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
  input: "^gradients/dis/BatchNorm_3/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis/BatchNorm_3/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis/BatchNorm_3/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_3/batchnorm/sub_grad/Neg"
  input: "^gradients/dis/BatchNorm_3/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Shape"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency"
  input: "dis_1/BatchNorm_3/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Mul"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Sum"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "dis_1/Conv3D_3"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Mul_1"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/sub_grad/Neg"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/dis/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis/BatchNorm_3/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/dis/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis/BatchNorm_3/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_3/batchnorm/mul_1_grad/Mul"
  input: "^gradients/dis/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_1_grad/Mul"
  input: "^gradients/dis/BatchNorm_3/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/batchnorm/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
  input: "^gradients/dis/BatchNorm_3/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/dis/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_3/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_3/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm_3/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "dis/BatchNorm_3/batchnorm/Rsqrt"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm_3/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "dis_1/BatchNorm_3/batchnorm/Rsqrt"
  input: "gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_grad/Shape"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/dis/BatchNorm_3/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_grad/Sum"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/BatchNorm_3/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_grad/Sum_1"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_3/batchnorm/add_grad/Reshape"
  input: "^gradients/dis/BatchNorm_3/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_grad/Reshape"
  input: "^gradients/dis/BatchNorm_3/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_grad/Reshape_1"
  input: "^gradients/dis/BatchNorm_3/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Shape"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Sum"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape_1"
  input: "^gradients/dis_1/BatchNorm_3/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_3/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm_3/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm_3/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/add"
  op: "Add"
  input: "dis/BatchNorm_3/moments/variance/reduction_indices"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/add"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/range"
  op: "Range"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/range/start"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/Size"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/Shape_1"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/range"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/mod"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/DynamicStitch"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_3/moments/Squeeze_1_grad/Reshape"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/Reshape"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2048.0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/Tile"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm_3/moments/variance/reduction_indices"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/add"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/range"
  op: "Range"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/range/start"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Size"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape_1"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/range"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/mod"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/DynamicStitch"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_3/moments/Squeeze_1_grad/Reshape"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Reshape"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2048.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Tile"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Shape"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/dis/BatchNorm_3/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/scalar"
  input: "gradients/dis/BatchNorm_3/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dis/Conv3D_3"
  input: "dis/BatchNorm_3/moments/StopGradient"
  input: "^gradients/dis/BatchNorm_3/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Mul"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Sum"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Shape"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/dis_1/BatchNorm_3/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/scalar"
  input: "gradients/dis_1/BatchNorm_3/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dis_1/Conv3D_3"
  input: "dis_1/BatchNorm_3/moments/StopGradient"
  input: "^gradients/dis_1/BatchNorm_3/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Mul"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Sum"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/add"
  op: "Add"
  input: "dis/BatchNorm_3/moments/mean/reduction_indices"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/add"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/range"
  op: "Range"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/range/start"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/Size"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/Shape_1"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/range"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/mod"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/DynamicStitch"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_3/moments/Squeeze_grad/Reshape"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/Reshape"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2048.0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_3/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/Tile"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm_3/moments/mean/reduction_indices"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/add"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/range"
  op: "Range"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/range/start"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Size"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape_1"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/range"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/mod"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/DynamicStitch"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_3/moments/Squeeze_grad/Reshape"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Reshape"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2048.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_3/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Tile"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/dis/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm_3/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm_3/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_3/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_3_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/dis/Conv3D_3_grad/Shape"
  input: "wd4/read"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_3_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "dis/Maximum_2"
  input: "gradients/dis/Conv3D_3_grad/Shape_1"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/Conv3D_3_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis/Conv3D_3_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/dis/Conv3D_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/Conv3D_3_grad/Conv3DBackpropInputV2"
  input: "^gradients/dis/Conv3D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Conv3D_3_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/Conv3D_3_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis/Conv3D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Conv3D_3_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm_3/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm_3/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_3_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/dis_1/Conv3D_3_grad/Shape"
  input: "wd4/read"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_3_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "dis_1/Maximum_2"
  input: "gradients/dis_1/Conv3D_3_grad/Shape_1"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/Conv3D_3_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis_1/Conv3D_3_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/dis_1/Conv3D_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/Conv3D_3_grad/Conv3DBackpropInputV2"
  input: "^gradients/dis_1/Conv3D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Conv3D_3_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/Conv3D_3_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis_1/Conv3D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Conv3D_3_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_2_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_2_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_2_grad/zeros"
  op: "Fill"
  input: "gradients/dis/Maximum_2_grad/Shape_2"
  input: "gradients/dis/Maximum_2_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_2_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dis/BatchNorm_2/batchnorm/add_1"
  input: "dis/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/Maximum_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/Maximum_2_grad/Shape"
  input: "gradients/dis/Maximum_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_2_grad/Select"
  op: "Select"
  input: "gradients/dis/Maximum_2_grad/GreaterEqual"
  input: "gradients/dis/Conv3D_3_grad/tuple/control_dependency"
  input: "gradients/dis/Maximum_2_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/Maximum_2_grad/Select_1"
  op: "Select"
  input: "gradients/dis/Maximum_2_grad/GreaterEqual"
  input: "gradients/dis/Maximum_2_grad/zeros"
  input: "gradients/dis/Conv3D_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/Maximum_2_grad/Sum"
  op: "Sum"
  input: "gradients/dis/Maximum_2_grad/Select"
  input: "gradients/dis/Maximum_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/Maximum_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/Maximum_2_grad/Sum"
  input: "gradients/dis/Maximum_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/Maximum_2_grad/Select_1"
  input: "gradients/dis/Maximum_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/Maximum_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/Maximum_2_grad/Sum_1"
  input: "gradients/dis/Maximum_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/Maximum_2_grad/Reshape"
  input: "^gradients/dis/Maximum_2_grad/Reshape_1"
}
node {
  name: "gradients/dis/Maximum_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/Maximum_2_grad/Reshape"
  input: "^gradients/dis/Maximum_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Maximum_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/Maximum_2_grad/Reshape_1"
  input: "^gradients/dis/Maximum_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Maximum_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_2_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_2_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_2_grad/zeros"
  op: "Fill"
  input: "gradients/dis_1/Maximum_2_grad/Shape_2"
  input: "gradients/dis_1/Maximum_2_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_2_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dis_1/BatchNorm_2/batchnorm/add_1"
  input: "dis_1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/Maximum_2_grad/Shape"
  input: "gradients/dis_1/Maximum_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_2_grad/Select"
  op: "Select"
  input: "gradients/dis_1/Maximum_2_grad/GreaterEqual"
  input: "gradients/dis_1/Conv3D_3_grad/tuple/control_dependency"
  input: "gradients/dis_1/Maximum_2_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_2_grad/Select_1"
  op: "Select"
  input: "gradients/dis_1/Maximum_2_grad/GreaterEqual"
  input: "gradients/dis_1/Maximum_2_grad/zeros"
  input: "gradients/dis_1/Conv3D_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_2_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/Maximum_2_grad/Select"
  input: "gradients/dis_1/Maximum_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/Maximum_2_grad/Sum"
  input: "gradients/dis_1/Maximum_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/Maximum_2_grad/Select_1"
  input: "gradients/dis_1/Maximum_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/Maximum_2_grad/Sum_1"
  input: "gradients/dis_1/Maximum_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/Maximum_2_grad/Reshape"
  input: "^gradients/dis_1/Maximum_2_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/Maximum_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/Maximum_2_grad/Reshape"
  input: "^gradients/dis_1/Maximum_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Maximum_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/Maximum_2_grad/Reshape_1"
  input: "^gradients/dis_1/Maximum_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Maximum_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/dis/Conv3D_3_grad/tuple/control_dependency_1"
  input: "gradients/dis_1/Conv3D_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Conv3D_3_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/dis/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/mul_2_grad/Shape"
  input: "gradients/dis/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/dis/Maximum_2_grad/tuple/control_dependency_1"
  input: "dis/BatchNorm_2/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/dis/mul_2_grad/Mul"
  input: "gradients/dis/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/mul_2_grad/Sum"
  input: "gradients/dis/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/mul_2_grad/Mul_1"
  op: "Mul"
  input: "dis/mul_2/x"
  input: "gradients/dis/Maximum_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/mul_2_grad/Mul_1"
  input: "gradients/dis/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/mul_2_grad/Sum_1"
  input: "gradients/dis/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/mul_2_grad/Reshape"
  input: "^gradients/dis/mul_2_grad/Reshape_1"
}
node {
  name: "gradients/dis/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/mul_2_grad/Reshape"
  input: "^gradients/dis/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/mul_2_grad/Reshape_1"
  input: "^gradients/dis/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/mul_2_grad/Shape"
  input: "gradients/dis_1/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/Maximum_2_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_2/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/mul_2_grad/Mul"
  input: "gradients/dis_1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/mul_2_grad/Sum"
  input: "gradients/dis_1/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "dis_1/mul_2/x"
  input: "gradients/dis_1/Maximum_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/mul_2_grad/Mul_1"
  input: "gradients/dis_1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/mul_2_grad/Sum_1"
  input: "gradients/dis_1/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/mul_2_grad/Reshape"
  input: "^gradients/dis_1/mul_2_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/mul_2_grad/Reshape"
  input: "^gradients/dis_1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/mul_2_grad/Reshape_1"
  input: "^gradients/dis_1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/dis/Maximum_2_grad/tuple/control_dependency"
  input: "gradients/dis/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Maximum_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Shape"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Sum"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Sum_1"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Reshape"
  input: "^gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Reshape"
  input: "^gradients/dis/BatchNorm_2/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/dis/BatchNorm_2/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/dis_1/Maximum_2_grad/tuple/control_dependency"
  input: "gradients/dis_1/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Maximum_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Shape"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_12"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Sum"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_12"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Shape"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency"
  input: "dis/BatchNorm_2/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Mul"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Sum"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "dis/Conv3D_2"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Mul_1"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Sum_1"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_2/batchnorm/mul_grad/Reshape"
  input: "^gradients/dis/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Reshape"
  input: "^gradients/dis/BatchNorm_2/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
  input: "^gradients/dis/BatchNorm_2/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis/BatchNorm_2/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis/BatchNorm_2/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_2/batchnorm/sub_grad/Neg"
  input: "^gradients/dis/BatchNorm_2/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Shape"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency"
  input: "dis_1/BatchNorm_2/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Mul"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Sum"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "dis_1/Conv3D_2"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Mul_1"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/sub_grad/Neg"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/dis/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis/BatchNorm_2/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/dis/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis/BatchNorm_2/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_2/batchnorm/mul_1_grad/Mul"
  input: "^gradients/dis/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_1_grad/Mul"
  input: "^gradients/dis/BatchNorm_2/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/batchnorm/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
  input: "^gradients/dis/BatchNorm_2/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/dis/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_2/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_2/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm_2/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "dis/BatchNorm_2/batchnorm/Rsqrt"
  input: "gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm_2/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "dis_1/BatchNorm_2/batchnorm/Rsqrt"
  input: "gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_grad/Shape"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/dis/BatchNorm_2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_grad/Sum"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/BatchNorm_2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_grad/Sum_1"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_2/batchnorm/add_grad/Reshape"
  input: "^gradients/dis/BatchNorm_2/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_grad/Reshape"
  input: "^gradients/dis/BatchNorm_2/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_grad/Reshape_1"
  input: "^gradients/dis/BatchNorm_2/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Shape"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Sum"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape_1"
  input: "^gradients/dis_1/BatchNorm_2/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_2/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm_2/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm_2/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/add"
  op: "Add"
  input: "dis/BatchNorm_2/moments/variance/reduction_indices"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/add"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/range"
  op: "Range"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/range/start"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/Size"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/Shape_1"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/range"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/mod"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/DynamicStitch"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_2/moments/Squeeze_1_grad/Reshape"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/Reshape"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16384.0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/Tile"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm_2/moments/variance/reduction_indices"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/add"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/range"
  op: "Range"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/range/start"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Size"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape_1"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/range"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/mod"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/DynamicStitch"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_2/moments/Squeeze_1_grad/Reshape"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Reshape"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16384.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Tile"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Shape"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/dis/BatchNorm_2/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/scalar"
  input: "gradients/dis/BatchNorm_2/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dis/Conv3D_2"
  input: "dis/BatchNorm_2/moments/StopGradient"
  input: "^gradients/dis/BatchNorm_2/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Mul"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Sum"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Shape"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/dis_1/BatchNorm_2/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/scalar"
  input: "gradients/dis_1/BatchNorm_2/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dis_1/Conv3D_2"
  input: "dis_1/BatchNorm_2/moments/StopGradient"
  input: "^gradients/dis_1/BatchNorm_2/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Mul"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Sum"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/add"
  op: "Add"
  input: "dis/BatchNorm_2/moments/mean/reduction_indices"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/add"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/range"
  op: "Range"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/range/start"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/Size"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/Shape_1"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/range"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/mod"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/DynamicStitch"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_2/moments/Squeeze_grad/Reshape"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/Reshape"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16384.0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_2/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/Tile"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm_2/moments/mean/reduction_indices"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/add"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/range"
  op: "Range"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/range/start"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Size"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape_1"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/range"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/mod"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/DynamicStitch"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_2/moments/Squeeze_grad/Reshape"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Reshape"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16384.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_2/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Tile"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/dis/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm_2/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm_2/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_2/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_2_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/dis/Conv3D_2_grad/Shape"
  input: "wd3/read"
  input: "gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_2_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "dis/Maximum_1"
  input: "gradients/dis/Conv3D_2_grad/Shape_1"
  input: "gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/Conv3D_2_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis/Conv3D_2_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/dis/Conv3D_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/Conv3D_2_grad/Conv3DBackpropInputV2"
  input: "^gradients/dis/Conv3D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Conv3D_2_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/Conv3D_2_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis/Conv3D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Conv3D_2_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm_2/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm_2/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_2_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/dis_1/Conv3D_2_grad/Shape"
  input: "wd3/read"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_2_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "dis_1/Maximum_1"
  input: "gradients/dis_1/Conv3D_2_grad/Shape_1"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/Conv3D_2_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis_1/Conv3D_2_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/dis_1/Conv3D_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/Conv3D_2_grad/Conv3DBackpropInputV2"
  input: "^gradients/dis_1/Conv3D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Conv3D_2_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/Conv3D_2_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis_1/Conv3D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Conv3D_2_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_1_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_1_grad/zeros"
  op: "Fill"
  input: "gradients/dis/Maximum_1_grad/Shape_2"
  input: "gradients/dis/Maximum_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dis/BatchNorm_1/batchnorm/add_1"
  input: "dis/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/Maximum_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/Maximum_1_grad/Shape"
  input: "gradients/dis/Maximum_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_1_grad/Select"
  op: "Select"
  input: "gradients/dis/Maximum_1_grad/GreaterEqual"
  input: "gradients/dis/Conv3D_2_grad/tuple/control_dependency"
  input: "gradients/dis/Maximum_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/Maximum_1_grad/Select_1"
  op: "Select"
  input: "gradients/dis/Maximum_1_grad/GreaterEqual"
  input: "gradients/dis/Maximum_1_grad/zeros"
  input: "gradients/dis/Conv3D_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/Maximum_1_grad/Sum"
  op: "Sum"
  input: "gradients/dis/Maximum_1_grad/Select"
  input: "gradients/dis/Maximum_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/Maximum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/Maximum_1_grad/Sum"
  input: "gradients/dis/Maximum_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/Maximum_1_grad/Select_1"
  input: "gradients/dis/Maximum_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/Maximum_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/Maximum_1_grad/Sum_1"
  input: "gradients/dis/Maximum_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/Maximum_1_grad/Reshape"
  input: "^gradients/dis/Maximum_1_grad/Reshape_1"
}
node {
  name: "gradients/dis/Maximum_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/Maximum_1_grad/Reshape"
  input: "^gradients/dis/Maximum_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Maximum_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/Maximum_1_grad/Reshape_1"
  input: "^gradients/dis/Maximum_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Maximum_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_1_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_1_grad/zeros"
  op: "Fill"
  input: "gradients/dis_1/Maximum_1_grad/Shape_2"
  input: "gradients/dis_1/Maximum_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dis_1/BatchNorm_1/batchnorm/add_1"
  input: "dis_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/Maximum_1_grad/Shape"
  input: "gradients/dis_1/Maximum_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_1_grad/Select"
  op: "Select"
  input: "gradients/dis_1/Maximum_1_grad/GreaterEqual"
  input: "gradients/dis_1/Conv3D_2_grad/tuple/control_dependency"
  input: "gradients/dis_1/Maximum_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_1_grad/Select_1"
  op: "Select"
  input: "gradients/dis_1/Maximum_1_grad/GreaterEqual"
  input: "gradients/dis_1/Maximum_1_grad/zeros"
  input: "gradients/dis_1/Conv3D_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_1_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/Maximum_1_grad/Select"
  input: "gradients/dis_1/Maximum_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/Maximum_1_grad/Sum"
  input: "gradients/dis_1/Maximum_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/Maximum_1_grad/Select_1"
  input: "gradients/dis_1/Maximum_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/Maximum_1_grad/Sum_1"
  input: "gradients/dis_1/Maximum_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/Maximum_1_grad/Reshape"
  input: "^gradients/dis_1/Maximum_1_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/Maximum_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/Maximum_1_grad/Reshape"
  input: "^gradients/dis_1/Maximum_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Maximum_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/Maximum_1_grad/Reshape_1"
  input: "^gradients/dis_1/Maximum_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Maximum_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/dis/Conv3D_2_grad/tuple/control_dependency_1"
  input: "gradients/dis_1/Conv3D_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Conv3D_2_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/dis/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/mul_1_grad/Shape"
  input: "gradients/dis/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/dis/Maximum_1_grad/tuple/control_dependency_1"
  input: "dis/BatchNorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/dis/mul_1_grad/Mul"
  input: "gradients/dis/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/mul_1_grad/Sum"
  input: "gradients/dis/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dis/mul_1/x"
  input: "gradients/dis/Maximum_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/mul_1_grad/Mul_1"
  input: "gradients/dis/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/mul_1_grad/Sum_1"
  input: "gradients/dis/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/mul_1_grad/Reshape"
  input: "^gradients/dis/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/dis/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/mul_1_grad/Reshape"
  input: "^gradients/dis/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/mul_1_grad/Reshape_1"
  input: "^gradients/dis/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/mul_1_grad/Shape"
  input: "gradients/dis_1/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/Maximum_1_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/mul_1_grad/Mul"
  input: "gradients/dis_1/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/mul_1_grad/Sum"
  input: "gradients/dis_1/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dis_1/mul_1/x"
  input: "gradients/dis_1/Maximum_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/mul_1_grad/Mul_1"
  input: "gradients/dis_1/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/mul_1_grad/Sum_1"
  input: "gradients/dis_1/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/mul_1_grad/Reshape"
  input: "^gradients/dis_1/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/mul_1_grad/Reshape"
  input: "^gradients/dis_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/mul_1_grad/Reshape_1"
  input: "^gradients/dis_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/dis/Maximum_1_grad/tuple/control_dependency"
  input: "gradients/dis/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Maximum_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Shape"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_19"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Sum"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_19"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Sum_1"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Reshape"
  input: "^gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Reshape"
  input: "^gradients/dis/BatchNorm_1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/dis/BatchNorm_1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/dis_1/Maximum_1_grad/tuple/control_dependency"
  input: "gradients/dis_1/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Maximum_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Shape"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_20"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Sum"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_20"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Shape"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency"
  input: "dis/BatchNorm_1/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "dis/Conv3D_1"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_1/batchnorm/mul_grad/Reshape"
  input: "^gradients/dis/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Reshape"
  input: "^gradients/dis/BatchNorm_1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
  input: "^gradients/dis/BatchNorm_1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis/BatchNorm_1/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis/BatchNorm_1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_1/batchnorm/sub_grad/Neg"
  input: "^gradients/dis/BatchNorm_1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Shape"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency"
  input: "dis_1/BatchNorm_1/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "dis_1/Conv3D_1"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/sub_grad/Neg"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/dis/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis/BatchNorm_1/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/dis/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis/BatchNorm_1/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_1/batchnorm/mul_1_grad/Mul"
  input: "^gradients/dis/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_1_grad/Mul"
  input: "^gradients/dis/BatchNorm_1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "^gradients/dis/BatchNorm_1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/dis/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_1/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_1/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm_1/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "dis/BatchNorm_1/batchnorm/Rsqrt"
  input: "gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm_1/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "dis_1/BatchNorm_1/batchnorm/Rsqrt"
  input: "gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_grad/Shape"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/dis/BatchNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_grad/Sum"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/BatchNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_grad/Sum_1"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_1/batchnorm/add_grad/Reshape"
  input: "^gradients/dis/BatchNorm_1/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_grad/Reshape"
  input: "^gradients/dis/BatchNorm_1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_grad/Reshape_1"
  input: "^gradients/dis/BatchNorm_1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Shape"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Sum"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape_1"
  input: "^gradients/dis_1/BatchNorm_1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_1/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm_1/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm_1/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/add"
  op: "Add"
  input: "dis/BatchNorm_1/moments/variance/reduction_indices"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/add"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/range"
  op: "Range"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/range/start"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/Size"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/Shape_1"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/range"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/mod"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/DynamicStitch"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_1/moments/Squeeze_1_grad/Reshape"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/Reshape"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 131072.0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/Tile"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm_1/moments/variance/reduction_indices"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/add"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/range"
  op: "Range"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/range/start"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Size"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape_1"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/range"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/mod"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/DynamicStitch"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_1/moments/Squeeze_1_grad/Reshape"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Reshape"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 131072.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Tile"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Shape"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/dis/BatchNorm_1/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients/dis/BatchNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dis/Conv3D_1"
  input: "dis/BatchNorm_1/moments/StopGradient"
  input: "^gradients/dis/BatchNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Shape"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/dis_1/BatchNorm_1/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients/dis_1/BatchNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dis_1/Conv3D_1"
  input: "dis_1/BatchNorm_1/moments/StopGradient"
  input: "^gradients/dis_1/BatchNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/add"
  op: "Add"
  input: "dis/BatchNorm_1/moments/mean/reduction_indices"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/add"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/range"
  op: "Range"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/range/start"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/Size"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/Shape_1"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/range"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/mod"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/DynamicStitch"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm_1/moments/Squeeze_grad/Reshape"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/Reshape"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 131072.0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/Tile"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm_1/moments/mean/reduction_indices"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/add"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/range"
  op: "Range"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/range/start"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Size"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape_1"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/range"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/mod"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/DynamicStitch"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm_1/moments/Squeeze_grad/Reshape"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Reshape"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 131072.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Tile"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/dis/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm_1/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm_1/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_1_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/dis/Conv3D_1_grad/Shape"
  input: "wd2/read"
  input: "gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_1_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "dis/Maximum"
  input: "gradients/dis/Conv3D_1_grad/Shape_1"
  input: "gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/Conv3D_1_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis/Conv3D_1_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/dis/Conv3D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/Conv3D_1_grad/Conv3DBackpropInputV2"
  input: "^gradients/dis/Conv3D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Conv3D_1_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/Conv3D_1_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis/Conv3D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Conv3D_1_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm_1/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_1_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/dis_1/Conv3D_1_grad/Shape"
  input: "wd2/read"
  input: "gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_1_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "dis_1/Maximum"
  input: "gradients/dis_1/Conv3D_1_grad/Shape_1"
  input: "gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/Conv3D_1_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis_1/Conv3D_1_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/dis_1/Conv3D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/Conv3D_1_grad/Conv3DBackpropInputV2"
  input: "^gradients/dis_1/Conv3D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Conv3D_1_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/Conv3D_1_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis_1/Conv3D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Conv3D_1_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/dis/Maximum_grad/Shape_2"
  input: "gradients/dis/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dis/BatchNorm/batchnorm_1/add_1"
  input: "dis/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/Maximum_grad/Shape"
  input: "gradients/dis/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_grad/Select"
  op: "Select"
  input: "gradients/dis/Maximum_grad/GreaterEqual"
  input: "gradients/dis/Conv3D_1_grad/tuple/control_dependency"
  input: "gradients/dis/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/dis/Maximum_grad/GreaterEqual"
  input: "gradients/dis/Maximum_grad/zeros"
  input: "gradients/dis/Conv3D_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/dis/Maximum_grad/Select"
  input: "gradients/dis/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/Maximum_grad/Sum"
  input: "gradients/dis/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/Maximum_grad/Select_1"
  input: "gradients/dis/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/Maximum_grad/Sum_1"
  input: "gradients/dis/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/Maximum_grad/Reshape"
  input: "^gradients/dis/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/dis/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/Maximum_grad/Reshape"
  input: "^gradients/dis/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/Maximum_grad/Reshape_1"
  input: "^gradients/dis/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/dis_1/Maximum_grad/Shape_2"
  input: "gradients/dis_1/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dis_1/BatchNorm/batchnorm_1/add_1"
  input: "dis_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/Maximum_grad/Shape"
  input: "gradients/dis_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_grad/Select"
  op: "Select"
  input: "gradients/dis_1/Maximum_grad/GreaterEqual"
  input: "gradients/dis_1/Conv3D_1_grad/tuple/control_dependency"
  input: "gradients/dis_1/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/dis_1/Maximum_grad/GreaterEqual"
  input: "gradients/dis_1/Maximum_grad/zeros"
  input: "gradients/dis_1/Conv3D_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/Maximum_grad/Select"
  input: "gradients/dis_1/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/Maximum_grad/Sum"
  input: "gradients/dis_1/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/Maximum_grad/Select_1"
  input: "gradients/dis_1/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/Maximum_grad/Sum_1"
  input: "gradients/dis_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/Maximum_grad/Reshape"
  input: "^gradients/dis_1/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/Maximum_grad/Reshape"
  input: "^gradients/dis_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/Maximum_grad/Reshape_1"
  input: "^gradients/dis_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/dis/Conv3D_1_grad/tuple/control_dependency_1"
  input: "gradients/dis_1/Conv3D_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Conv3D_1_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/dis/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/mul_grad/Shape"
  input: "gradients/dis/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/mul_grad/Mul"
  op: "Mul"
  input: "gradients/dis/Maximum_grad/tuple/control_dependency_1"
  input: "dis/BatchNorm/batchnorm_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/mul_grad/Sum"
  op: "Sum"
  input: "gradients/dis/mul_grad/Mul"
  input: "gradients/dis/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/mul_grad/Sum"
  input: "gradients/dis/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/mul_grad/Mul_1"
  op: "Mul"
  input: "dis/mul/x"
  input: "gradients/dis/Maximum_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/mul_grad/Mul_1"
  input: "gradients/dis/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/mul_grad/Sum_1"
  input: "gradients/dis/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/mul_grad/Reshape"
  input: "^gradients/dis/mul_grad/Reshape_1"
}
node {
  name: "gradients/dis/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/mul_grad/Reshape"
  input: "^gradients/dis/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/mul_grad/Reshape_1"
  input: "^gradients/dis/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/mul_grad/Shape"
  input: "gradients/dis_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/Maximum_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm/batchnorm_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/mul_grad/Mul"
  input: "gradients/dis_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/mul_grad/Sum"
  input: "gradients/dis_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/mul_grad/Mul_1"
  op: "Mul"
  input: "dis_1/mul/x"
  input: "gradients/dis_1/Maximum_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/mul_grad/Mul_1"
  input: "gradients/dis_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/mul_grad/Sum_1"
  input: "gradients/dis_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/mul_grad/Reshape"
  input: "^gradients/dis_1/mul_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/mul_grad/Reshape"
  input: "^gradients/dis_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/mul_grad/Reshape_1"
  input: "^gradients/dis_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/dis/Maximum_grad/tuple/control_dependency"
  input: "gradients/dis/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Shape"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_27"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Sum"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_27"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Sum_1"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Reshape"
  input: "^gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Reshape"
  input: "^gradients/dis/BatchNorm/batchnorm_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
  input: "^gradients/dis/BatchNorm/batchnorm_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_28"
  op: "AddN"
  input: "gradients/dis_1/Maximum_grad/tuple/control_dependency"
  input: "gradients/dis_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Shape"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_28"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Sum"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_28"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Shape"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency"
  input: "dis/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Mul"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Sum"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Mul_1"
  op: "Mul"
  input: "dis/Conv3D"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Mul_1"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Sum_1"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm/batchnorm_1/mul_grad/Reshape"
  input: "^gradients/dis/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Reshape"
  input: "^gradients/dis/BatchNorm/batchnorm_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/batchnorm_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
  input: "^gradients/dis/BatchNorm/batchnorm_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis/BatchNorm/batchnorm_1/sub_grad/Neg"
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis/BatchNorm/batchnorm_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm/batchnorm_1/sub_grad/Neg"
  input: "^gradients/dis/BatchNorm/batchnorm_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/batchnorm_1/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Shape"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency"
  input: "dis_1/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Mul"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Sum"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Mul_1"
  op: "Mul"
  input: "dis_1/Conv3D"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Mul_1"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/sub_grad/Neg"
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/sub_grad/Neg"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/batchnorm_1/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/dis/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency_1"
  input: "dis/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/dis/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency_1"
  input: "dis/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm/batchnorm_1/mul_1_grad/Mul"
  input: "^gradients/dis/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_1_grad/Mul"
  input: "^gradients/dis/BatchNorm/batchnorm_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/batchnorm_1/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
  input: "^gradients/dis/BatchNorm/batchnorm_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_29"
  op: "AddN"
  input: "gradients/dis/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_30"
  op: "AddN"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency_1"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "dis/BatchNorm/batchnorm_1/Rsqrt"
  input: "gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_31"
  op: "AddN"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency_1"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "dis_1/BatchNorm/batchnorm_1/Rsqrt"
  input: "gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_grad/Shape"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/dis/BatchNorm/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_grad/Sum"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/BatchNorm/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_grad/Sum_1"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm/batchnorm_1/add_grad/Reshape"
  input: "^gradients/dis/BatchNorm/batchnorm_1/add_grad/Reshape_1"
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_grad/Reshape"
  input: "^gradients/dis/BatchNorm/batchnorm_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/batchnorm_1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/batchnorm_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_grad/Reshape_1"
  input: "^gradients/dis/BatchNorm/batchnorm_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/batchnorm_1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Shape"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Sum"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape_1"
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape_1"
  input: "^gradients/dis_1/BatchNorm/batchnorm_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm/batchnorm_1/add_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/add_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/add"
  op: "Add"
  input: "dis/BatchNorm/moments/variance/reduction_indices"
  input: "gradients/dis/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/dis/BatchNorm/moments/variance_grad/add"
  input: "gradients/dis/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/range"
  op: "Range"
  input: "gradients/dis/BatchNorm/moments/variance_grad/range/start"
  input: "gradients/dis/BatchNorm/moments/variance_grad/Size"
  input: "gradients/dis/BatchNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/dis/BatchNorm/moments/variance_grad/Shape_1"
  input: "gradients/dis/BatchNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis/BatchNorm/moments/variance_grad/range"
  input: "gradients/dis/BatchNorm/moments/variance_grad/mod"
  input: "gradients/dis/BatchNorm/moments/variance_grad/Shape"
  input: "gradients/dis/BatchNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis/BatchNorm/moments/variance_grad/DynamicStitch"
  input: "gradients/dis/BatchNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis/BatchNorm/moments/variance_grad/Shape"
  input: "gradients/dis/BatchNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm/moments/Squeeze_1_grad/Reshape"
  input: "gradients/dis/BatchNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/dis/BatchNorm/moments/variance_grad/Reshape"
  input: "gradients/dis/BatchNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1048576.0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis/BatchNorm/moments/variance_grad/Tile"
  input: "gradients/dis/BatchNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm/moments/variance/reduction_indices"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/add"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/range"
  op: "Range"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/range/start"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/Size"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/Shape_1"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/range"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/mod"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/DynamicStitch"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm/moments/Squeeze_1_grad/Reshape"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/Reshape"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1048576.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/Tile"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Shape"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/dis/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/dis/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dis/Conv3D"
  input: "dis/BatchNorm/moments/StopGradient"
  input: "^gradients/dis/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis/BatchNorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/dis/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Shape"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/dis_1/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients/dis_1/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dis_1/Conv3D"
  input: "dis_1/BatchNorm/moments/StopGradient"
  input: "^gradients/dis_1/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/add"
  op: "Add"
  input: "dis/BatchNorm/moments/mean/reduction_indices"
  input: "gradients/dis/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/dis/BatchNorm/moments/mean_grad/add"
  input: "gradients/dis/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/range"
  op: "Range"
  input: "gradients/dis/BatchNorm/moments/mean_grad/range/start"
  input: "gradients/dis/BatchNorm/moments/mean_grad/Size"
  input: "gradients/dis/BatchNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/dis/BatchNorm/moments/mean_grad/Shape_1"
  input: "gradients/dis/BatchNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis/BatchNorm/moments/mean_grad/range"
  input: "gradients/dis/BatchNorm/moments/mean_grad/mod"
  input: "gradients/dis/BatchNorm/moments/mean_grad/Shape"
  input: "gradients/dis/BatchNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis/BatchNorm/moments/mean_grad/DynamicStitch"
  input: "gradients/dis/BatchNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis/BatchNorm/moments/mean_grad/Shape"
  input: "gradients/dis/BatchNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis/BatchNorm/moments/Squeeze_grad/Reshape"
  input: "gradients/dis/BatchNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/dis/BatchNorm/moments/mean_grad/Reshape"
  input: "gradients/dis/BatchNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1048576.0
      }
    }
  }
}
node {
  name: "gradients/dis/BatchNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis/BatchNorm/moments/mean_grad/Tile"
  input: "gradients/dis/BatchNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm/moments/mean/reduction_indices"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/add"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/range"
  op: "Range"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/range/start"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/Size"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/Shape_1"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/range"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/mod"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/DynamicStitch"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/dis_1/BatchNorm/moments/Squeeze_grad/Reshape"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/Reshape"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1048576.0
      }
    }
  }
}
node {
  name: "gradients/dis_1/BatchNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/Tile"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_32"
  op: "AddN"
  input: "gradients/dis/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/dis/BatchNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/BatchNorm/batchnorm_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000@\000\000\000@\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/dis/Conv3D_grad/Shape"
  input: "wd1/read"
  input: "gradients/AddN_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Placeholder"
  input: "gradients/dis/Conv3D_grad/Shape_1"
  input: "gradients/AddN_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis/Conv3D_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis/Conv3D_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/dis/Conv3D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis/Conv3D_grad/Conv3DBackpropInputV2"
  input: "^gradients/dis/Conv3D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Conv3D_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/dis/Conv3D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis/Conv3D_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis/Conv3D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Conv3D_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/AddN_33"
  op: "AddN"
  input: "gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/dis_1/BatchNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000@\000\000\000@\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/dis_1/Conv3D_grad/Shape"
  input: "wd1/read"
  input: "gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "gen/gen_tanh"
  input: "gradients/dis_1/Conv3D_grad/Shape_1"
  input: "gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dis_1/Conv3D_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis_1/Conv3D_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/dis_1/Conv3D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dis_1/Conv3D_grad/Conv3DBackpropInputV2"
  input: "^gradients/dis_1/Conv3D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Conv3D_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/dis_1/Conv3D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dis_1/Conv3D_grad/Conv3DBackpropFilterV2"
  input: "^gradients/dis_1/Conv3D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis_1/Conv3D_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/AddN_34"
  op: "AddN"
  input: "gradients/dis/Conv3D_grad/tuple/control_dependency_1"
  input: "gradients/dis_1/Conv3D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dis/Conv3D_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "wd1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "wd1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wd1/Adam/Initializer/zeros"
  op: "Fill"
  input: "wd1/Adam/Initializer/zeros/shape_as_tensor"
  input: "wd1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wd1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wd1/Adam/Assign"
  op: "Assign"
  input: "wd1/Adam"
  input: "wd1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wd1/Adam/read"
  op: "Identity"
  input: "wd1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
}
node {
  name: "wd1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "wd1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wd1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "wd1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "wd1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wd1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wd1/Adam_1/Assign"
  op: "Assign"
  input: "wd1/Adam_1"
  input: "wd1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wd1/Adam_1/read"
  op: "Identity"
  input: "wd1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
}
node {
  name: "wd2/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "wd2/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wd2/Adam/Initializer/zeros"
  op: "Fill"
  input: "wd2/Adam/Initializer/zeros/shape_as_tensor"
  input: "wd2/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wd2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wd2/Adam/Assign"
  op: "Assign"
  input: "wd2/Adam"
  input: "wd2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wd2/Adam/read"
  op: "Identity"
  input: "wd2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
}
node {
  name: "wd2/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "wd2/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wd2/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "wd2/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "wd2/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wd2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wd2/Adam_1/Assign"
  op: "Assign"
  input: "wd2/Adam_1"
  input: "wd2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wd2/Adam_1/read"
  op: "Identity"
  input: "wd2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
}
node {
  name: "wd3/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "wd3/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wd3/Adam/Initializer/zeros"
  op: "Fill"
  input: "wd3/Adam/Initializer/zeros/shape_as_tensor"
  input: "wd3/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wd3/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wd3/Adam/Assign"
  op: "Assign"
  input: "wd3/Adam"
  input: "wd3/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wd3/Adam/read"
  op: "Identity"
  input: "wd3/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
}
node {
  name: "wd3/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "wd3/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wd3/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "wd3/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "wd3/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wd3/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wd3/Adam_1/Assign"
  op: "Assign"
  input: "wd3/Adam_1"
  input: "wd3/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wd3/Adam_1/read"
  op: "Identity"
  input: "wd3/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
}
node {
  name: "wd4/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "wd4/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wd4/Adam/Initializer/zeros"
  op: "Fill"
  input: "wd4/Adam/Initializer/zeros/shape_as_tensor"
  input: "wd4/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wd4/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wd4/Adam/Assign"
  op: "Assign"
  input: "wd4/Adam"
  input: "wd4/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wd4/Adam/read"
  op: "Identity"
  input: "wd4/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
}
node {
  name: "wd4/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "wd4/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wd4/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "wd4/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "wd4/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wd4/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wd4/Adam_1/Assign"
  op: "Assign"
  input: "wd4/Adam_1"
  input: "wd4/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wd4/Adam_1/read"
  op: "Identity"
  input: "wd4/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
}
node {
  name: "wd5/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "wd5/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wd5/Adam/Initializer/zeros"
  op: "Fill"
  input: "wd5/Adam/Initializer/zeros/shape_as_tensor"
  input: "wd5/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wd5/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wd5/Adam/Assign"
  op: "Assign"
  input: "wd5/Adam"
  input: "wd5/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wd5/Adam/read"
  op: "Identity"
  input: "wd5/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
}
node {
  name: "wd5/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "wd5/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wd5/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "wd5/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "wd5/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wd5/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wd5/Adam_1/Assign"
  op: "Assign"
  input: "wd5/Adam_1"
  input: "wd5/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wd5/Adam_1/read"
  op: "Identity"
  input: "wd5/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
}
node {
  name: "dis/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "dis/BatchNorm/beta/Adam"
  input: "dis/BatchNorm/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "dis/BatchNorm/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "dis/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "dis/BatchNorm/beta/Adam_1"
  input: "dis/BatchNorm/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "dis/BatchNorm/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm_1/beta/Adam/Assign"
  op: "Assign"
  input: "dis/BatchNorm_1/beta/Adam"
  input: "dis/BatchNorm_1/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_1/beta/Adam/read"
  op: "Identity"
  input: "dis/BatchNorm_1/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm_1/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm_1/beta/Adam_1/Assign"
  op: "Assign"
  input: "dis/BatchNorm_1/beta/Adam_1"
  input: "dis/BatchNorm_1/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_1/beta/Adam_1/read"
  op: "Identity"
  input: "dis/BatchNorm_1/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm_2/beta/Adam/Assign"
  op: "Assign"
  input: "dis/BatchNorm_2/beta/Adam"
  input: "dis/BatchNorm_2/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_2/beta/Adam/read"
  op: "Identity"
  input: "dis/BatchNorm_2/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm_2/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm_2/beta/Adam_1/Assign"
  op: "Assign"
  input: "dis/BatchNorm_2/beta/Adam_1"
  input: "dis/BatchNorm_2/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_2/beta/Adam_1/read"
  op: "Identity"
  input: "dis/BatchNorm_2/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm_3/beta/Adam/Assign"
  op: "Assign"
  input: "dis/BatchNorm_3/beta/Adam"
  input: "dis/BatchNorm_3/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_3/beta/Adam/read"
  op: "Identity"
  input: "dis/BatchNorm_3/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dis/BatchNorm_3/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dis/BatchNorm_3/beta/Adam_1/Assign"
  op: "Assign"
  input: "dis/BatchNorm_3/beta/Adam_1"
  input: "dis/BatchNorm_3/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dis/BatchNorm_3/beta/Adam_1/read"
  op: "Identity"
  input: "dis/BatchNorm_3/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_wd1/ApplyAdam"
  op: "ApplyAdam"
  input: "wd1"
  input: "wd1/Adam"
  input: "wd1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_wd2/ApplyAdam"
  op: "ApplyAdam"
  input: "wd2"
  input: "wd2/Adam"
  input: "wd2/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_wd3/ApplyAdam"
  op: "ApplyAdam"
  input: "wd3"
  input: "wd3/Adam"
  input: "wd3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_wd4/ApplyAdam"
  op: "ApplyAdam"
  input: "wd4"
  input: "wd4/Adam"
  input: "wd4/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_wd5/ApplyAdam"
  op: "ApplyAdam"
  input: "wd5"
  input: "wd5/Adam"
  input: "wd5/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dis/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "dis/BatchNorm/beta"
  input: "dis/BatchNorm/beta/Adam"
  input: "dis/BatchNorm/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_29"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dis/BatchNorm_1/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "dis/BatchNorm_1/beta"
  input: "dis/BatchNorm_1/beta/Adam"
  input: "dis/BatchNorm_1/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_21"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dis/BatchNorm_2/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "dis/BatchNorm_2/beta"
  input: "dis/BatchNorm_2/beta/Adam"
  input: "dis/BatchNorm_2/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dis/BatchNorm_3/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "dis/BatchNorm_3/beta"
  input: "dis/BatchNorm_3/beta/Adam"
  input: "dis/BatchNorm_3/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_dis/BatchNorm/beta/ApplyAdam"
  input: "^Adam/update_dis/BatchNorm_1/beta/ApplyAdam"
  input: "^Adam/update_dis/BatchNorm_2/beta/ApplyAdam"
  input: "^Adam/update_dis/BatchNorm_3/beta/ApplyAdam"
  input: "^Adam/update_wd1/ApplyAdam"
  input: "^Adam/update_wd2/ApplyAdam"
  input: "^Adam/update_wd3/ApplyAdam"
  input: "^Adam/update_wd4/ApplyAdam"
  input: "^Adam/update_wd5/ApplyAdam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_dis/BatchNorm/beta/ApplyAdam"
  input: "^Adam/update_dis/BatchNorm_1/beta/ApplyAdam"
  input: "^Adam/update_dis/BatchNorm_2/beta/ApplyAdam"
  input: "^Adam/update_dis/BatchNorm_3/beta/ApplyAdam"
  input: "^Adam/update_wd1/ApplyAdam"
  input: "^Adam/update_wd2/ApplyAdam"
  input: "^Adam/update_wd3/ApplyAdam"
  input: "^Adam/update_wd4/ApplyAdam"
  input: "^Adam/update_wd5/ApplyAdam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/NoOp"
  op: "NoOp"
  input: "^Adam/update_wd1/ApplyAdam"
  input: "^Adam/update_wd2/ApplyAdam"
  input: "^Adam/update_wd3/ApplyAdam"
  input: "^Adam/update_wd4/ApplyAdam"
  input: "^Adam/update_wd5/ApplyAdam"
}
node {
  name: "Adam/NoOp_1"
  op: "NoOp"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
  input: "^Adam/update_dis/BatchNorm/beta/ApplyAdam"
  input: "^Adam/update_dis/BatchNorm_1/beta/ApplyAdam"
  input: "^Adam/update_dis/BatchNorm_2/beta/ApplyAdam"
  input: "^Adam/update_dis/BatchNorm_3/beta/ApplyAdam"
  device: "/device:GPU:0"
}
node {
  name: "Adam"
  op: "NoOp"
  input: "^Adam/NoOp"
  input: "^Adam/NoOp_1"
}
node {
  name: "gradients_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_1/Fill"
  op: "Fill"
  input: "gradients_1/Shape"
  input: "gradients_1/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss_reduce_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss_reduce_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/Fill"
  input: "gradients_1/g_loss_reduce_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss_reduce_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss_reduce_grad/Tile"
  op: "Tile"
  input: "gradients_1/g_loss_reduce_grad/Reshape"
  input: "gradients_1/g_loss_reduce_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/g_loss_reduce_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.0
      }
    }
  }
}
node {
  name: "gradients_1/g_loss_reduce_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/g_loss_reduce_grad/Tile"
  input: "gradients_1/g_loss_reduce_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/g_loss_reduce_grad/truediv"
}
node {
  name: "gradients_1/g_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/g_loss_reduce_grad/truediv"
  input: "^gradients_1/g_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss_reduce_grad/truediv"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/g_loss_reduce_grad/truediv"
  input: "^gradients_1/g_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss_reduce_grad/truediv"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/g_loss_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/g_loss/sub_grad/Neg"
  input: "^gradients_1/g_loss_grad/tuple/control_dependency"
}
node {
  name: "gradients_1/g_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/g_loss_grad/tuple/control_dependency"
  input: "^gradients_1/g_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss_reduce_grad/truediv"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/g_loss/sub_grad/Neg"
  input: "^gradients_1/g_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/Log1p_grad/add/x"
  op: "Const"
  input: "^gradients_1/g_loss_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/Log1p_grad/add"
  op: "Add"
  input: "gradients_1/g_loss/Log1p_grad/add/x"
  input: "g_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "gradients_1/g_loss/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/Log1p_grad/mul"
  op: "Mul"
  input: "gradients_1/g_loss_grad/tuple/control_dependency_1"
  input: "gradients_1/g_loss/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/Select_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/Select_grad/Select"
  op: "Select"
  input: "g_loss/GreaterEqual"
  input: "gradients_1/g_loss/sub_grad/tuple/control_dependency"
  input: "gradients_1/g_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/Select_grad/Select_1"
  op: "Select"
  input: "g_loss/GreaterEqual"
  input: "gradients_1/g_loss/Select_grad/zeros_like"
  input: "gradients_1/g_loss/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/g_loss/Select_grad/Select"
  input: "^gradients_1/g_loss/Select_grad/Select_1"
}
node {
  name: "gradients_1/g_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/g_loss/Select_grad/Select"
  input: "^gradients_1/g_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/g_loss/Select_grad/Select_1"
  input: "^gradients_1/g_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/g_loss/sub_grad/tuple/control_dependency_1"
  input: "ones_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/g_loss/sub_grad/tuple/control_dependency_1"
  input: "dis_1/Conv3D_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/g_loss/mul_grad/Mul"
  input: "^gradients_1/g_loss/mul_grad/Mul_1"
}
node {
  name: "gradients_1/g_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/g_loss/mul_grad/Mul"
  input: "^gradients_1/g_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/g_loss/mul_grad/Mul_1"
  input: "^gradients_1/g_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/Exp_grad/mul"
  op: "Mul"
  input: "gradients_1/g_loss/Log1p_grad/mul"
  input: "g_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/Select_1_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/Select_1_grad/Select"
  op: "Select"
  input: "g_loss/GreaterEqual"
  input: "gradients_1/g_loss/Exp_grad/mul"
  input: "gradients_1/g_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "g_loss/GreaterEqual"
  input: "gradients_1/g_loss/Select_1_grad/zeros_like"
  input: "gradients_1/g_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/g_loss/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/g_loss/Select_1_grad/Select"
  input: "^gradients_1/g_loss/Select_1_grad/Select_1"
}
node {
  name: "gradients_1/g_loss/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/g_loss/Select_1_grad/Select"
  input: "^gradients_1/g_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/g_loss/Select_1_grad/Select_1"
  input: "^gradients_1/g_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients_1/g_loss/Neg_grad/Neg"
  op: "Neg"
  input: "gradients_1/g_loss/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/AddN"
  op: "AddN"
  input: "gradients_1/g_loss/Select_grad/tuple/control_dependency"
  input: "gradients_1/g_loss/mul_grad/tuple/control_dependency"
  input: "gradients_1/g_loss/Select_1_grad/tuple/control_dependency_1"
  input: "gradients_1/g_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/g_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_4_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_4_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients_1/dis_1/Conv3D_4_grad/Shape"
  input: "wd5/read"
  input: "gradients_1/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_4_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "dis_1/Maximum_3"
  input: "gradients_1/dis_1/Conv3D_4_grad/Shape_1"
  input: "gradients_1/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/Conv3D_4_grad/Conv3DBackpropFilterV2"
  input: "^gradients_1/dis_1/Conv3D_4_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients_1/dis_1/Conv3D_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/Conv3D_4_grad/Conv3DBackpropInputV2"
  input: "^gradients_1/dis_1/Conv3D_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Conv3D_4_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/Conv3D_4_grad/Conv3DBackpropFilterV2"
  input: "^gradients_1/dis_1/Conv3D_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Conv3D_4_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/zeros"
  op: "Fill"
  input: "gradients_1/dis_1/Maximum_3_grad/Shape_2"
  input: "gradients_1/dis_1/Maximum_3_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dis_1/BatchNorm_3/batchnorm/add_1"
  input: "dis_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/Maximum_3_grad/Shape"
  input: "gradients_1/dis_1/Maximum_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/Select"
  op: "Select"
  input: "gradients_1/dis_1/Maximum_3_grad/GreaterEqual"
  input: "gradients_1/dis_1/Conv3D_4_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/Maximum_3_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/Select_1"
  op: "Select"
  input: "gradients_1/dis_1/Maximum_3_grad/GreaterEqual"
  input: "gradients_1/dis_1/Maximum_3_grad/zeros"
  input: "gradients_1/dis_1/Conv3D_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/Maximum_3_grad/Select"
  input: "gradients_1/dis_1/Maximum_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/Maximum_3_grad/Sum"
  input: "gradients_1/dis_1/Maximum_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/Maximum_3_grad/Select_1"
  input: "gradients_1/dis_1/Maximum_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/Maximum_3_grad/Sum_1"
  input: "gradients_1/dis_1/Maximum_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/Maximum_3_grad/Reshape"
  input: "^gradients_1/dis_1/Maximum_3_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/Maximum_3_grad/Reshape"
  input: "^gradients_1/dis_1/Maximum_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Maximum_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/Maximum_3_grad/Reshape_1"
  input: "^gradients_1/dis_1/Maximum_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Maximum_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/mul_3_grad/Shape"
  input: "gradients_1/dis_1/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/Maximum_3_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_3/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/mul_3_grad/Mul"
  input: "gradients_1/dis_1/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/mul_3_grad/Sum"
  input: "gradients_1/dis_1/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_3_grad/Mul_1"
  op: "Mul"
  input: "dis_1/mul_3/x"
  input: "gradients_1/dis_1/Maximum_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/mul_3_grad/Mul_1"
  input: "gradients_1/dis_1/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/mul_3_grad/Sum_1"
  input: "gradients_1/dis_1/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/mul_3_grad/Reshape"
  input: "^gradients_1/dis_1/mul_3_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/mul_3_grad/Reshape"
  input: "^gradients_1/dis_1/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/mul_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/mul_3_grad/Reshape_1"
  input: "^gradients_1/dis_1/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/mul_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/AddN_1"
  op: "AddN"
  input: "gradients_1/dis_1/Maximum_3_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/mul_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Maximum_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN_1"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/AddN_1"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency"
  input: "dis_1/BatchNorm_3/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Mul"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "dis_1/Conv3D_3"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Mul_1"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/sub_grad/Neg"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_3/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_3/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm_3/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/AddN_2"
  op: "AddN"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "dis_1/BatchNorm_3/batchnorm/Rsqrt"
  input: "gradients_1/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape_1"
  input: "^gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm_3/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm_3/moments/variance/reduction_indices"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/add"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/range"
  op: "Range"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/range/start"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Size"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape_1"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/range"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/mod"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/moments/Squeeze_1_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2048.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Tile"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients_1/dis_1/BatchNorm_3/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/scalar"
  input: "gradients_1/dis_1/BatchNorm_3/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dis_1/Conv3D_3"
  input: "dis_1/BatchNorm_3/moments/StopGradient"
  input: "^gradients_1/dis_1/BatchNorm_3/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Mul"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm_3/moments/mean/reduction_indices"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/add"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/range"
  op: "Range"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/range/start"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Size"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape_1"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/range"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/mod"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/moments/Squeeze_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2048.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Tile"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/AddN_3"
  op: "AddN"
  input: "gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm_3/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm_3/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_3/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_3_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients_1/dis_1/Conv3D_3_grad/Shape"
  input: "wd4/read"
  input: "gradients_1/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_3_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "dis_1/Maximum_2"
  input: "gradients_1/dis_1/Conv3D_3_grad/Shape_1"
  input: "gradients_1/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/Conv3D_3_grad/Conv3DBackpropFilterV2"
  input: "^gradients_1/dis_1/Conv3D_3_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients_1/dis_1/Conv3D_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/Conv3D_3_grad/Conv3DBackpropInputV2"
  input: "^gradients_1/dis_1/Conv3D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Conv3D_3_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/Conv3D_3_grad/Conv3DBackpropFilterV2"
  input: "^gradients_1/dis_1/Conv3D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Conv3D_3_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/zeros"
  op: "Fill"
  input: "gradients_1/dis_1/Maximum_2_grad/Shape_2"
  input: "gradients_1/dis_1/Maximum_2_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dis_1/BatchNorm_2/batchnorm/add_1"
  input: "dis_1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/Maximum_2_grad/Shape"
  input: "gradients_1/dis_1/Maximum_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/Select"
  op: "Select"
  input: "gradients_1/dis_1/Maximum_2_grad/GreaterEqual"
  input: "gradients_1/dis_1/Conv3D_3_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/Maximum_2_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/Select_1"
  op: "Select"
  input: "gradients_1/dis_1/Maximum_2_grad/GreaterEqual"
  input: "gradients_1/dis_1/Maximum_2_grad/zeros"
  input: "gradients_1/dis_1/Conv3D_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/Maximum_2_grad/Select"
  input: "gradients_1/dis_1/Maximum_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/Maximum_2_grad/Sum"
  input: "gradients_1/dis_1/Maximum_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/Maximum_2_grad/Select_1"
  input: "gradients_1/dis_1/Maximum_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/Maximum_2_grad/Sum_1"
  input: "gradients_1/dis_1/Maximum_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/Maximum_2_grad/Reshape"
  input: "^gradients_1/dis_1/Maximum_2_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/Maximum_2_grad/Reshape"
  input: "^gradients_1/dis_1/Maximum_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Maximum_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/Maximum_2_grad/Reshape_1"
  input: "^gradients_1/dis_1/Maximum_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Maximum_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/mul_2_grad/Shape"
  input: "gradients_1/dis_1/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/Maximum_2_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_2/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/mul_2_grad/Mul"
  input: "gradients_1/dis_1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/mul_2_grad/Sum"
  input: "gradients_1/dis_1/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "dis_1/mul_2/x"
  input: "gradients_1/dis_1/Maximum_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/mul_2_grad/Mul_1"
  input: "gradients_1/dis_1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/mul_2_grad/Sum_1"
  input: "gradients_1/dis_1/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/mul_2_grad/Reshape"
  input: "^gradients_1/dis_1/mul_2_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/mul_2_grad/Reshape"
  input: "^gradients_1/dis_1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/mul_2_grad/Reshape_1"
  input: "^gradients_1/dis_1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/AddN_4"
  op: "AddN"
  input: "gradients_1/dis_1/Maximum_2_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Maximum_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN_4"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/AddN_4"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency"
  input: "dis_1/BatchNorm_2/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Mul"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "dis_1/Conv3D_2"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Mul_1"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/sub_grad/Neg"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_2/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_2/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm_2/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/AddN_5"
  op: "AddN"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "dis_1/BatchNorm_2/batchnorm/Rsqrt"
  input: "gradients_1/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape_1"
  input: "^gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm_2/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm_2/moments/variance/reduction_indices"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/add"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/range"
  op: "Range"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/range/start"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Size"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape_1"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/range"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/mod"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/moments/Squeeze_1_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16384.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Tile"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients_1/dis_1/BatchNorm_2/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/scalar"
  input: "gradients_1/dis_1/BatchNorm_2/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dis_1/Conv3D_2"
  input: "dis_1/BatchNorm_2/moments/StopGradient"
  input: "^gradients_1/dis_1/BatchNorm_2/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Mul"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm_2/moments/mean/reduction_indices"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/add"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/range"
  op: "Range"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/range/start"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Size"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape_1"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/range"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/mod"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/moments/Squeeze_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16384.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Tile"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/AddN_6"
  op: "AddN"
  input: "gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm_2/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm_2/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_2/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_2_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients_1/dis_1/Conv3D_2_grad/Shape"
  input: "wd3/read"
  input: "gradients_1/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_2_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "dis_1/Maximum_1"
  input: "gradients_1/dis_1/Conv3D_2_grad/Shape_1"
  input: "gradients_1/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/Conv3D_2_grad/Conv3DBackpropFilterV2"
  input: "^gradients_1/dis_1/Conv3D_2_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients_1/dis_1/Conv3D_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/Conv3D_2_grad/Conv3DBackpropInputV2"
  input: "^gradients_1/dis_1/Conv3D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Conv3D_2_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/Conv3D_2_grad/Conv3DBackpropFilterV2"
  input: "^gradients_1/dis_1/Conv3D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Conv3D_2_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/zeros"
  op: "Fill"
  input: "gradients_1/dis_1/Maximum_1_grad/Shape_2"
  input: "gradients_1/dis_1/Maximum_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dis_1/BatchNorm_1/batchnorm/add_1"
  input: "dis_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/Maximum_1_grad/Shape"
  input: "gradients_1/dis_1/Maximum_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/Select"
  op: "Select"
  input: "gradients_1/dis_1/Maximum_1_grad/GreaterEqual"
  input: "gradients_1/dis_1/Conv3D_2_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/Maximum_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/Select_1"
  op: "Select"
  input: "gradients_1/dis_1/Maximum_1_grad/GreaterEqual"
  input: "gradients_1/dis_1/Maximum_1_grad/zeros"
  input: "gradients_1/dis_1/Conv3D_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/Maximum_1_grad/Select"
  input: "gradients_1/dis_1/Maximum_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/Maximum_1_grad/Sum"
  input: "gradients_1/dis_1/Maximum_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/Maximum_1_grad/Select_1"
  input: "gradients_1/dis_1/Maximum_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/Maximum_1_grad/Sum_1"
  input: "gradients_1/dis_1/Maximum_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/Maximum_1_grad/Reshape"
  input: "^gradients_1/dis_1/Maximum_1_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/Maximum_1_grad/Reshape"
  input: "^gradients_1/dis_1/Maximum_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Maximum_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/Maximum_1_grad/Reshape_1"
  input: "^gradients_1/dis_1/Maximum_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Maximum_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/mul_1_grad/Shape"
  input: "gradients_1/dis_1/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/Maximum_1_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/mul_1_grad/Mul"
  input: "gradients_1/dis_1/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/mul_1_grad/Sum"
  input: "gradients_1/dis_1/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dis_1/mul_1/x"
  input: "gradients_1/dis_1/Maximum_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/mul_1_grad/Mul_1"
  input: "gradients_1/dis_1/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/mul_1_grad/Sum_1"
  input: "gradients_1/dis_1/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/mul_1_grad/Reshape"
  input: "^gradients_1/dis_1/mul_1_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/mul_1_grad/Reshape"
  input: "^gradients_1/dis_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/mul_1_grad/Reshape_1"
  input: "^gradients_1/dis_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/AddN_7"
  op: "AddN"
  input: "gradients_1/dis_1/Maximum_1_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Maximum_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN_7"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/AddN_7"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency"
  input: "dis_1/BatchNorm_1/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "dis_1/Conv3D_1"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/sub_grad/Neg"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_1/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm_1/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm_1/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/AddN_8"
  op: "AddN"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "dis_1/BatchNorm_1/batchnorm/Rsqrt"
  input: "gradients_1/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape_1"
  input: "^gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm_1/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm_1/moments/variance/reduction_indices"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/add"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/range"
  op: "Range"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/range/start"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Size"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape_1"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/range"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/mod"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/moments/Squeeze_1_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 131072.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Tile"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients_1/dis_1/BatchNorm_1/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients_1/dis_1/BatchNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dis_1/Conv3D_1"
  input: "dis_1/BatchNorm_1/moments/StopGradient"
  input: "^gradients_1/dis_1/BatchNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm_1/moments/mean/reduction_indices"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/add"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/range"
  op: "Range"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/range/start"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Size"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape_1"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/range"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/mod"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/moments/Squeeze_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 131072.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Tile"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/AddN_9"
  op: "AddN"
  input: "gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm_1/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm_1/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_1_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients_1/dis_1/Conv3D_1_grad/Shape"
  input: "wd2/read"
  input: "gradients_1/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_1_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "dis_1/Maximum"
  input: "gradients_1/dis_1/Conv3D_1_grad/Shape_1"
  input: "gradients_1/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/Conv3D_1_grad/Conv3DBackpropFilterV2"
  input: "^gradients_1/dis_1/Conv3D_1_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients_1/dis_1/Conv3D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/Conv3D_1_grad/Conv3DBackpropInputV2"
  input: "^gradients_1/dis_1/Conv3D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Conv3D_1_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/Conv3D_1_grad/Conv3DBackpropFilterV2"
  input: "^gradients_1/dis_1/Conv3D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Conv3D_1_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients_1/dis_1/Maximum_grad/Shape_2"
  input: "gradients_1/dis_1/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dis_1/BatchNorm/batchnorm_1/add_1"
  input: "dis_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/Maximum_grad/Shape"
  input: "gradients_1/dis_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_grad/Select"
  op: "Select"
  input: "gradients_1/dis_1/Maximum_grad/GreaterEqual"
  input: "gradients_1/dis_1/Conv3D_1_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients_1/dis_1/Maximum_grad/GreaterEqual"
  input: "gradients_1/dis_1/Maximum_grad/zeros"
  input: "gradients_1/dis_1/Conv3D_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/Maximum_grad/Select"
  input: "gradients_1/dis_1/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/Maximum_grad/Sum"
  input: "gradients_1/dis_1/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/Maximum_grad/Select_1"
  input: "gradients_1/dis_1/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/Maximum_grad/Sum_1"
  input: "gradients_1/dis_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/Maximum_grad/Reshape"
  input: "^gradients_1/dis_1/Maximum_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/Maximum_grad/Reshape"
  input: "^gradients_1/dis_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/Maximum_grad/Reshape_1"
  input: "^gradients_1/dis_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Maximum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/mul_grad/Shape"
  input: "gradients_1/dis_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/Maximum_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm/batchnorm_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/mul_grad/Mul"
  input: "gradients_1/dis_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/mul_grad/Sum"
  input: "gradients_1/dis_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_grad/Mul_1"
  op: "Mul"
  input: "dis_1/mul/x"
  input: "gradients_1/dis_1/Maximum_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/mul_grad/Mul_1"
  input: "gradients_1/dis_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/mul_grad/Sum_1"
  input: "gradients_1/dis_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/mul_grad/Reshape"
  input: "^gradients_1/dis_1/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/mul_grad/Reshape"
  input: "^gradients_1/dis_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/mul_grad/Reshape_1"
  input: "^gradients_1/dis_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/AddN_10"
  op: "AddN"
  input: "gradients_1/dis_1/Maximum_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Maximum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN_10"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/AddN_10"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency"
  input: "dis_1/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Mul"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Mul_1"
  op: "Mul"
  input: "dis_1/Conv3D"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Mul_1"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/sub_grad/Neg"
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/sub_grad/Neg"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/batchnorm_1/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency_1"
  input: "dis_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/AddN_11"
  op: "AddN"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency_1"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "dis_1/BatchNorm/batchnorm_1/Rsqrt"
  input: "gradients_1/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape_1"
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape_1"
  input: "^gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/add_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm/moments/variance/reduction_indices"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/add"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/range"
  op: "Range"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/range/start"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Size"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape_1"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/range"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/mod"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm/moments/Squeeze_1_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1048576.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Tile"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients_1/dis_1/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients_1/dis_1/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dis_1/Conv3D"
  input: "dis_1/BatchNorm/moments/StopGradient"
  input: "^gradients_1/dis_1/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/add"
  op: "Add"
  input: "dis_1/BatchNorm/moments/mean/reduction_indices"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/add"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/range"
  op: "Range"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/range/start"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Size"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape_1"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/range"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/mod"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/DynamicStitch"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dis_1/BatchNorm/moments/Squeeze_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Reshape"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1048576.0
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/BatchNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Tile"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/AddN_12"
  op: "AddN"
  input: "gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients_1/dis_1/BatchNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/BatchNorm/batchnorm_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000@\000\000\000@\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients_1/dis_1/Conv3D_grad/Shape"
  input: "wd1/read"
  input: "gradients_1/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "gen/gen_tanh"
  input: "gradients_1/dis_1/Conv3D_grad/Shape_1"
  input: "gradients_1/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dis_1/Conv3D_grad/Conv3DBackpropFilterV2"
  input: "^gradients_1/dis_1/Conv3D_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients_1/dis_1/Conv3D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dis_1/Conv3D_grad/Conv3DBackpropInputV2"
  input: "^gradients_1/dis_1/Conv3D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Conv3D_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients_1/dis_1/Conv3D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dis_1/Conv3D_grad/Conv3DBackpropFilterV2"
  input: "^gradients_1/dis_1/Conv3D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dis_1/Conv3D_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients_1/gen/gen_tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gen/gen_tanh"
  input: "gradients_1/dis_1/Conv3D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_4_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_4_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "gradients_1/gen/gen_tanh_grad/TanhGrad"
  input: "gradients_1/gen/conv3d_transpose_4_grad/Shape"
  input: "gen/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_4_grad/Conv3D"
  op: "Conv3D"
  input: "gradients_1/gen/gen_tanh_grad/TanhGrad"
  input: "wg5/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/conv3d_transpose_4_grad/Conv3D"
  input: "^gradients_1/gen/conv3d_transpose_4_grad/Conv3DBackpropFilterV2"
}
node {
  name: "gradients_1/gen/conv3d_transpose_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/conv3d_transpose_4_grad/Conv3DBackpropFilterV2"
  input: "^gradients_1/gen/conv3d_transpose_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/conv3d_transpose_4_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/conv3d_transpose_4_grad/Conv3D"
  input: "^gradients_1/gen/conv3d_transpose_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/conv3d_transpose_4_grad/Conv3D"
      }
    }
  }
}
node {
  name: "gradients_1/gen/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/gen/conv3d_transpose_4_grad/tuple/control_dependency_1"
  input: "gen/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Shape"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/Relu_3_grad/ReluGrad"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Sum"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/Relu_3_grad/ReluGrad"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Shape"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency"
  input: "gen/BatchNorm_3/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Mul"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Sum"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gen/conv3d_transpose_3"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Mul_1"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/sub_grad/Neg"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "gen/BatchNorm_3/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "gen/BatchNorm_3/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/mul_1_grad/Mul"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_1_grad/Mul"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/batchnorm/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm_3/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/AddN_13"
  op: "AddN"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "gen/BatchNorm_3/batchnorm/Rsqrt"
  input: "gradients_1/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Shape"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Sum"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Reshape_1"
  input: "^gradients_1/gen/BatchNorm_3/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm_3/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/add"
  op: "Add"
  input: "gen/BatchNorm_3/moments/variance/reduction_indices"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/add"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/range"
  op: "Range"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/range/start"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Size"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape_1"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/range"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/mod"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/DynamicStitch"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_3/moments/Squeeze_1_grad/Reshape"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Reshape"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1048576.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Tile"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Shape"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients_1/gen/BatchNorm_3/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/scalar"
  input: "gradients_1/gen/BatchNorm_3/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "gen/conv3d_transpose_3"
  input: "gen/BatchNorm_3/moments/StopGradient"
  input: "^gradients_1/gen/BatchNorm_3/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Mul"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Sum"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/add"
  op: "Add"
  input: "gen/BatchNorm_3/moments/mean/reduction_indices"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/add"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/range"
  op: "Range"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/range/start"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Size"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape_1"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/range"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/mod"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/DynamicStitch"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_3/moments/Squeeze_grad/Reshape"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Reshape"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1048576.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_3/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Tile"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/AddN_14"
  op: "AddN"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm_3/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm_3/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_3/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_3_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "gradients_1/AddN_14"
  input: "gradients_1/gen/conv3d_transpose_3_grad/Shape"
  input: "gen/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_3_grad/Conv3D"
  op: "Conv3D"
  input: "gradients_1/AddN_14"
  input: "wg4/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/conv3d_transpose_3_grad/Conv3D"
  input: "^gradients_1/gen/conv3d_transpose_3_grad/Conv3DBackpropFilterV2"
}
node {
  name: "gradients_1/gen/conv3d_transpose_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/conv3d_transpose_3_grad/Conv3DBackpropFilterV2"
  input: "^gradients_1/gen/conv3d_transpose_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/conv3d_transpose_3_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/conv3d_transpose_3_grad/Conv3D"
  input: "^gradients_1/gen/conv3d_transpose_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/conv3d_transpose_3_grad/Conv3D"
      }
    }
  }
}
node {
  name: "gradients_1/gen/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/gen/conv3d_transpose_3_grad/tuple/control_dependency_1"
  input: "gen/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Shape"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/Relu_2_grad/ReluGrad"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Sum"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/Relu_2_grad/ReluGrad"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Shape"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency"
  input: "gen/BatchNorm_2/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Mul"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Sum"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gen/conv3d_transpose_2"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Mul_1"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/sub_grad/Neg"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "gen/BatchNorm_2/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "gen/BatchNorm_2/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/mul_1_grad/Mul"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_1_grad/Mul"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/batchnorm/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm_2/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/AddN_15"
  op: "AddN"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "gen/BatchNorm_2/batchnorm/Rsqrt"
  input: "gradients_1/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Shape"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Sum"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Reshape_1"
  input: "^gradients_1/gen/BatchNorm_2/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm_2/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/add"
  op: "Add"
  input: "gen/BatchNorm_2/moments/variance/reduction_indices"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/add"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/range"
  op: "Range"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/range/start"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Size"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape_1"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/range"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/mod"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/DynamicStitch"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_2/moments/Squeeze_1_grad/Reshape"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Reshape"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 131072.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Tile"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Shape"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients_1/gen/BatchNorm_2/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/scalar"
  input: "gradients_1/gen/BatchNorm_2/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "gen/conv3d_transpose_2"
  input: "gen/BatchNorm_2/moments/StopGradient"
  input: "^gradients_1/gen/BatchNorm_2/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Mul"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Sum"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\020\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/add"
  op: "Add"
  input: "gen/BatchNorm_2/moments/mean/reduction_indices"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/add"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/range"
  op: "Range"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/range/start"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Size"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape_1"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/range"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/mod"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/DynamicStitch"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_2/moments/Squeeze_grad/Reshape"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Reshape"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 131072.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_2/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Tile"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/AddN_16"
  op: "AddN"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm_2/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm_2/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_2/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_2_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "gradients_1/AddN_16"
  input: "gradients_1/gen/conv3d_transpose_2_grad/Shape"
  input: "gen/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_2_grad/Conv3D"
  op: "Conv3D"
  input: "gradients_1/AddN_16"
  input: "wg3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/conv3d_transpose_2_grad/Conv3D"
  input: "^gradients_1/gen/conv3d_transpose_2_grad/Conv3DBackpropFilterV2"
}
node {
  name: "gradients_1/gen/conv3d_transpose_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/conv3d_transpose_2_grad/Conv3DBackpropFilterV2"
  input: "^gradients_1/gen/conv3d_transpose_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/conv3d_transpose_2_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/conv3d_transpose_2_grad/Conv3D"
  input: "^gradients_1/gen/conv3d_transpose_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/conv3d_transpose_2_grad/Conv3D"
      }
    }
  }
}
node {
  name: "gradients_1/gen/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/gen/conv3d_transpose_2_grad/tuple/control_dependency_1"
  input: "gen/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Shape"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/Relu_1_grad/ReluGrad"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Sum"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/Relu_1_grad/ReluGrad"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Shape"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency"
  input: "gen/BatchNorm_1/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Mul"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Sum"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gen/conv3d_transpose_1"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Mul_1"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/sub_grad/Neg"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "gen/BatchNorm_1/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "gen/BatchNorm_1/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/mul_1_grad/Mul"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_1_grad/Mul"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/batchnorm/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm_1/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/AddN_17"
  op: "AddN"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "gen/BatchNorm_1/batchnorm/Rsqrt"
  input: "gradients_1/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Shape"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Sum"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Reshape_1"
  input: "^gradients_1/gen/BatchNorm_1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm_1/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/add"
  op: "Add"
  input: "gen/BatchNorm_1/moments/variance/reduction_indices"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/add"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/range"
  op: "Range"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/range/start"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Size"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape_1"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/range"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/mod"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/DynamicStitch"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_1/moments/Squeeze_1_grad/Reshape"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Reshape"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16384.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Tile"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Shape"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients_1/gen/BatchNorm_1/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/scalar"
  input: "gradients_1/gen/BatchNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "gen/conv3d_transpose_1"
  input: "gen/BatchNorm_1/moments/StopGradient"
  input: "^gradients_1/gen/BatchNorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Mul"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Sum"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\010\000\000\000\010\000\000\000\010\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/add"
  op: "Add"
  input: "gen/BatchNorm_1/moments/mean/reduction_indices"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/add"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/range"
  op: "Range"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/range/start"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Size"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape_1"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/range"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/mod"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/DynamicStitch"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm_1/moments/Squeeze_grad/Reshape"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Reshape"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16384.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Tile"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/AddN_18"
  op: "AddN"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm_1/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm_1/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_1_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "gradients_1/AddN_18"
  input: "gradients_1/gen/conv3d_transpose_1_grad/Shape"
  input: "gen/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_1_grad/Conv3D"
  op: "Conv3D"
  input: "gradients_1/AddN_18"
  input: "wg2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/conv3d_transpose_1_grad/Conv3D"
  input: "^gradients_1/gen/conv3d_transpose_1_grad/Conv3DBackpropFilterV2"
}
node {
  name: "gradients_1/gen/conv3d_transpose_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/conv3d_transpose_1_grad/Conv3DBackpropFilterV2"
  input: "^gradients_1/gen/conv3d_transpose_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/conv3d_transpose_1_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/conv3d_transpose_1_grad/Conv3D"
  input: "^gradients_1/gen/conv3d_transpose_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/conv3d_transpose_1_grad/Conv3D"
      }
    }
  }
}
node {
  name: "gradients_1/gen/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/gen/conv3d_transpose_1_grad/tuple/control_dependency_1"
  input: "gen/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Shape"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/Relu_grad/ReluGrad"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Sum"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/Relu_grad/ReluGrad"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Shape"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency"
  input: "gen/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Mul"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Sum"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Mul_1"
  op: "Mul"
  input: "gen/conv3d_transpose"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Mul_1"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/sub_grad/Neg"
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/batchnorm_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/sub_grad/Neg"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/batchnorm_1/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency_1"
  input: "gen/BatchNorm/batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency_1"
  input: "gen/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/mul_1_grad/Mul"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_1_grad/Mul"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/batchnorm_1/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/batchnorm_1/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/AddN_19"
  op: "AddN"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency_1"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "gen/BatchNorm/batchnorm_1/Rsqrt"
  input: "gradients_1/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Shape"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Sum"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Reshape_1"
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Reshape_1"
  input: "^gradients_1/gen/BatchNorm/batchnorm_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/batchnorm_1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/add_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/add"
  op: "Add"
  input: "gen/BatchNorm/moments/variance/reduction_indices"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/add"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/range"
  op: "Range"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/range/start"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/Size"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/Shape_1"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/range"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/mod"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/DynamicStitch"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm/moments/Squeeze_1_grad/Reshape"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/Reshape"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2048.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/Tile"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Shape"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients_1/gen/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/scalar"
  input: "gradients_1/gen/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "gen/conv3d_transpose"
  input: "gen/BatchNorm/moments/StopGradient"
  input: "^gradients_1/gen/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Mul"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Sum"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/add"
  op: "Add"
  input: "gen/BatchNorm/moments/mean/reduction_indices"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/add"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/range"
  op: "Range"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/range/start"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/Size"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/Shape_1"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/range"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/mod"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/DynamicStitch"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/gen/BatchNorm/moments/Squeeze_grad/Reshape"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/Reshape"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2048.0
      }
    }
  }
}
node {
  name: "gradients_1/gen/BatchNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/Tile"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/AddN_20"
  op: "AddN"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients_1/gen/BatchNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/BatchNorm/batchnorm_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "gradients_1/AddN_20"
  input: "gradients_1/gen/conv3d_transpose_grad/Shape"
  input: "gen/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_grad/Conv3D"
  op: "Conv3D"
  input: "gradients_1/AddN_20"
  input: "wg1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/gen/conv3d_transpose_grad/Conv3D"
  input: "^gradients_1/gen/conv3d_transpose_grad/Conv3DBackpropFilterV2"
}
node {
  name: "gradients_1/gen/conv3d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/gen/conv3d_transpose_grad/Conv3DBackpropFilterV2"
  input: "^gradients_1/gen/conv3d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/conv3d_transpose_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients_1/gen/conv3d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/gen/conv3d_transpose_grad/Conv3D"
  input: "^gradients_1/gen/conv3d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/gen/conv3d_transpose_grad/Conv3D"
      }
    }
  }
}
node {
  name: "beta1_power_1/initial_value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "beta1_power_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power_1/Assign"
  op: "Assign"
  input: "beta1_power_1"
  input: "beta1_power_1/initial_value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power_1/read"
  op: "Identity"
  input: "beta1_power_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "beta2_power_1/initial_value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power_1/Assign"
  op: "Assign"
  input: "beta2_power_1"
  input: "beta2_power_1/initial_value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power_1/read"
  op: "Identity"
  input: "beta2_power_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "wg1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "wg1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wg1/Adam/Initializer/zeros"
  op: "Fill"
  input: "wg1/Adam/Initializer/zeros/shape_as_tensor"
  input: "wg1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wg1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wg1/Adam/Assign"
  op: "Assign"
  input: "wg1/Adam"
  input: "wg1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wg1/Adam/read"
  op: "Identity"
  input: "wg1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
}
node {
  name: "wg1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "wg1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wg1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "wg1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "wg1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wg1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wg1/Adam_1/Assign"
  op: "Assign"
  input: "wg1/Adam_1"
  input: "wg1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wg1/Adam_1/read"
  op: "Identity"
  input: "wg1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
}
node {
  name: "wg2/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "wg2/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wg2/Adam/Initializer/zeros"
  op: "Fill"
  input: "wg2/Adam/Initializer/zeros/shape_as_tensor"
  input: "wg2/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wg2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wg2/Adam/Assign"
  op: "Assign"
  input: "wg2/Adam"
  input: "wg2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wg2/Adam/read"
  op: "Identity"
  input: "wg2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
}
node {
  name: "wg2/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "wg2/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wg2/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "wg2/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "wg2/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wg2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wg2/Adam_1/Assign"
  op: "Assign"
  input: "wg2/Adam_1"
  input: "wg2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wg2/Adam_1/read"
  op: "Identity"
  input: "wg2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
}
node {
  name: "wg3/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "wg3/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wg3/Adam/Initializer/zeros"
  op: "Fill"
  input: "wg3/Adam/Initializer/zeros/shape_as_tensor"
  input: "wg3/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wg3/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wg3/Adam/Assign"
  op: "Assign"
  input: "wg3/Adam"
  input: "wg3/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wg3/Adam/read"
  op: "Identity"
  input: "wg3/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
}
node {
  name: "wg3/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "wg3/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wg3/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "wg3/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "wg3/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wg3/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wg3/Adam_1/Assign"
  op: "Assign"
  input: "wg3/Adam_1"
  input: "wg3/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wg3/Adam_1/read"
  op: "Identity"
  input: "wg3/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
}
node {
  name: "wg4/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "wg4/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wg4/Adam/Initializer/zeros"
  op: "Fill"
  input: "wg4/Adam/Initializer/zeros/shape_as_tensor"
  input: "wg4/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wg4/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wg4/Adam/Assign"
  op: "Assign"
  input: "wg4/Adam"
  input: "wg4/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wg4/Adam/read"
  op: "Identity"
  input: "wg4/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
}
node {
  name: "wg4/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "wg4/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wg4/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "wg4/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "wg4/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wg4/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wg4/Adam_1/Assign"
  op: "Assign"
  input: "wg4/Adam_1"
  input: "wg4/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wg4/Adam_1/read"
  op: "Identity"
  input: "wg4/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
}
node {
  name: "wg5/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "wg5/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wg5/Adam/Initializer/zeros"
  op: "Fill"
  input: "wg5/Adam/Initializer/zeros/shape_as_tensor"
  input: "wg5/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wg5/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wg5/Adam/Assign"
  op: "Assign"
  input: "wg5/Adam"
  input: "wg5/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wg5/Adam/read"
  op: "Identity"
  input: "wg5/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
}
node {
  name: "wg5/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "wg5/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wg5/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "wg5/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "wg5/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "wg5/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "wg5/Adam_1/Assign"
  op: "Assign"
  input: "wg5/Adam_1"
  input: "wg5/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "wg5/Adam_1/read"
  op: "Identity"
  input: "wg5/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "gen/BatchNorm/beta/Adam"
  input: "gen/BatchNorm/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "gen/BatchNorm/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "gen/BatchNorm/beta/Adam_1"
  input: "gen/BatchNorm/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "gen/BatchNorm/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam/Assign"
  op: "Assign"
  input: "gen/BatchNorm_1/beta/Adam"
  input: "gen/BatchNorm_1/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam/read"
  op: "Identity"
  input: "gen/BatchNorm_1/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam_1/Assign"
  op: "Assign"
  input: "gen/BatchNorm_1/beta/Adam_1"
  input: "gen/BatchNorm_1/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_1/beta/Adam_1/read"
  op: "Identity"
  input: "gen/BatchNorm_1/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam/Assign"
  op: "Assign"
  input: "gen/BatchNorm_2/beta/Adam"
  input: "gen/BatchNorm_2/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam/read"
  op: "Identity"
  input: "gen/BatchNorm_2/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam_1/Assign"
  op: "Assign"
  input: "gen/BatchNorm_2/beta/Adam_1"
  input: "gen/BatchNorm_2/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_2/beta/Adam_1/read"
  op: "Identity"
  input: "gen/BatchNorm_2/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam/Assign"
  op: "Assign"
  input: "gen/BatchNorm_3/beta/Adam"
  input: "gen/BatchNorm_3/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam/read"
  op: "Identity"
  input: "gen/BatchNorm_3/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam_1/Assign"
  op: "Assign"
  input: "gen/BatchNorm_3/beta/Adam_1"
  input: "gen/BatchNorm_3/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gen/BatchNorm_3/beta/Adam_1/read"
  op: "Identity"
  input: "gen/BatchNorm_3/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
}
node {
  name: "optimizer_gen/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0024999999441206455
      }
    }
  }
}
node {
  name: "optimizer_gen/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "optimizer_gen/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "optimizer_gen/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "optimizer_gen/update_wg1/ApplyAdam"
  op: "ApplyAdam"
  input: "wg1"
  input: "wg1/Adam"
  input: "wg1/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "optimizer_gen/learning_rate"
  input: "optimizer_gen/beta1"
  input: "optimizer_gen/beta2"
  input: "optimizer_gen/epsilon"
  input: "gradients_1/gen/conv3d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer_gen/update_wg2/ApplyAdam"
  op: "ApplyAdam"
  input: "wg2"
  input: "wg2/Adam"
  input: "wg2/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "optimizer_gen/learning_rate"
  input: "optimizer_gen/beta1"
  input: "optimizer_gen/beta2"
  input: "optimizer_gen/epsilon"
  input: "gradients_1/gen/conv3d_transpose_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer_gen/update_wg3/ApplyAdam"
  op: "ApplyAdam"
  input: "wg3"
  input: "wg3/Adam"
  input: "wg3/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "optimizer_gen/learning_rate"
  input: "optimizer_gen/beta1"
  input: "optimizer_gen/beta2"
  input: "optimizer_gen/epsilon"
  input: "gradients_1/gen/conv3d_transpose_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer_gen/update_wg4/ApplyAdam"
  op: "ApplyAdam"
  input: "wg4"
  input: "wg4/Adam"
  input: "wg4/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "optimizer_gen/learning_rate"
  input: "optimizer_gen/beta1"
  input: "optimizer_gen/beta2"
  input: "optimizer_gen/epsilon"
  input: "gradients_1/gen/conv3d_transpose_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer_gen/update_wg5/ApplyAdam"
  op: "ApplyAdam"
  input: "wg5"
  input: "wg5/Adam"
  input: "wg5/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "optimizer_gen/learning_rate"
  input: "optimizer_gen/beta1"
  input: "optimizer_gen/beta2"
  input: "optimizer_gen/epsilon"
  input: "gradients_1/gen/conv3d_transpose_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer_gen/update_gen/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/BatchNorm/beta"
  input: "gen/BatchNorm/beta/Adam"
  input: "gen/BatchNorm/beta/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "optimizer_gen/learning_rate"
  input: "optimizer_gen/beta1"
  input: "optimizer_gen/beta2"
  input: "optimizer_gen/epsilon"
  input: "gradients_1/gen/BatchNorm/batchnorm_1/sub_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer_gen/update_gen/BatchNorm_1/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/BatchNorm_1/beta"
  input: "gen/BatchNorm_1/beta/Adam"
  input: "gen/BatchNorm_1/beta/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "optimizer_gen/learning_rate"
  input: "optimizer_gen/beta1"
  input: "optimizer_gen/beta2"
  input: "optimizer_gen/epsilon"
  input: "gradients_1/gen/BatchNorm_1/batchnorm/sub_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer_gen/update_gen/BatchNorm_2/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/BatchNorm_2/beta"
  input: "gen/BatchNorm_2/beta/Adam"
  input: "gen/BatchNorm_2/beta/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "optimizer_gen/learning_rate"
  input: "optimizer_gen/beta1"
  input: "optimizer_gen/beta2"
  input: "optimizer_gen/epsilon"
  input: "gradients_1/gen/BatchNorm_2/batchnorm/sub_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer_gen/update_gen/BatchNorm_3/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "gen/BatchNorm_3/beta"
  input: "gen/BatchNorm_3/beta/Adam"
  input: "gen/BatchNorm_3/beta/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "optimizer_gen/learning_rate"
  input: "optimizer_gen/beta1"
  input: "optimizer_gen/beta2"
  input: "optimizer_gen/epsilon"
  input: "gradients_1/gen/BatchNorm_3/batchnorm/sub_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer_gen/mul"
  op: "Mul"
  input: "beta1_power_1/read"
  input: "optimizer_gen/beta1"
  input: "^optimizer_gen/update_gen/BatchNorm/beta/ApplyAdam"
  input: "^optimizer_gen/update_gen/BatchNorm_1/beta/ApplyAdam"
  input: "^optimizer_gen/update_gen/BatchNorm_2/beta/ApplyAdam"
  input: "^optimizer_gen/update_gen/BatchNorm_3/beta/ApplyAdam"
  input: "^optimizer_gen/update_wg1/ApplyAdam"
  input: "^optimizer_gen/update_wg2/ApplyAdam"
  input: "^optimizer_gen/update_wg3/ApplyAdam"
  input: "^optimizer_gen/update_wg4/ApplyAdam"
  input: "^optimizer_gen/update_wg5/ApplyAdam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "optimizer_gen/Assign"
  op: "Assign"
  input: "beta1_power_1"
  input: "optimizer_gen/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer_gen/mul_1"
  op: "Mul"
  input: "beta2_power_1/read"
  input: "optimizer_gen/beta2"
  input: "^optimizer_gen/update_gen/BatchNorm/beta/ApplyAdam"
  input: "^optimizer_gen/update_gen/BatchNorm_1/beta/ApplyAdam"
  input: "^optimizer_gen/update_gen/BatchNorm_2/beta/ApplyAdam"
  input: "^optimizer_gen/update_gen/BatchNorm_3/beta/ApplyAdam"
  input: "^optimizer_gen/update_wg1/ApplyAdam"
  input: "^optimizer_gen/update_wg2/ApplyAdam"
  input: "^optimizer_gen/update_wg3/ApplyAdam"
  input: "^optimizer_gen/update_wg4/ApplyAdam"
  input: "^optimizer_gen/update_wg5/ApplyAdam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "optimizer_gen/Assign_1"
  op: "Assign"
  input: "beta2_power_1"
  input: "optimizer_gen/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer_gen/NoOp"
  op: "NoOp"
  input: "^optimizer_gen/update_wg1/ApplyAdam"
  input: "^optimizer_gen/update_wg2/ApplyAdam"
  input: "^optimizer_gen/update_wg3/ApplyAdam"
  input: "^optimizer_gen/update_wg4/ApplyAdam"
  input: "^optimizer_gen/update_wg5/ApplyAdam"
}
node {
  name: "optimizer_gen/NoOp_1"
  op: "NoOp"
  input: "^optimizer_gen/Assign"
  input: "^optimizer_gen/Assign_1"
  input: "^optimizer_gen/update_gen/BatchNorm/beta/ApplyAdam"
  input: "^optimizer_gen/update_gen/BatchNorm_1/beta/ApplyAdam"
  input: "^optimizer_gen/update_gen/BatchNorm_2/beta/ApplyAdam"
  input: "^optimizer_gen/update_gen/BatchNorm_3/beta/ApplyAdam"
  device: "/device:GPU:0"
}
node {
  name: "optimizer_gen"
  op: "NoOp"
  input: "^optimizer_gen/NoOp"
  input: "^optimizer_gen/NoOp_1"
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 74
          }
        }
        string_val: "beta1_power"
        string_val: "beta1_power_1"
        string_val: "beta2_power"
        string_val: "beta2_power_1"
        string_val: "dis/BatchNorm/beta"
        string_val: "dis/BatchNorm/beta/Adam"
        string_val: "dis/BatchNorm/beta/Adam_1"
        string_val: "dis/BatchNorm/moving_mean"
        string_val: "dis/BatchNorm/moving_variance"
        string_val: "dis/BatchNorm_1/beta"
        string_val: "dis/BatchNorm_1/beta/Adam"
        string_val: "dis/BatchNorm_1/beta/Adam_1"
        string_val: "dis/BatchNorm_1/moving_mean"
        string_val: "dis/BatchNorm_1/moving_variance"
        string_val: "dis/BatchNorm_2/beta"
        string_val: "dis/BatchNorm_2/beta/Adam"
        string_val: "dis/BatchNorm_2/beta/Adam_1"
        string_val: "dis/BatchNorm_2/moving_mean"
        string_val: "dis/BatchNorm_2/moving_variance"
        string_val: "dis/BatchNorm_3/beta"
        string_val: "dis/BatchNorm_3/beta/Adam"
        string_val: "dis/BatchNorm_3/beta/Adam_1"
        string_val: "dis/BatchNorm_3/moving_mean"
        string_val: "dis/BatchNorm_3/moving_variance"
        string_val: "gen/BatchNorm/beta"
        string_val: "gen/BatchNorm/beta/Adam"
        string_val: "gen/BatchNorm/beta/Adam_1"
        string_val: "gen/BatchNorm/moving_mean"
        string_val: "gen/BatchNorm/moving_variance"
        string_val: "gen/BatchNorm_1/beta"
        string_val: "gen/BatchNorm_1/beta/Adam"
        string_val: "gen/BatchNorm_1/beta/Adam_1"
        string_val: "gen/BatchNorm_1/moving_mean"
        string_val: "gen/BatchNorm_1/moving_variance"
        string_val: "gen/BatchNorm_2/beta"
        string_val: "gen/BatchNorm_2/beta/Adam"
        string_val: "gen/BatchNorm_2/beta/Adam_1"
        string_val: "gen/BatchNorm_2/moving_mean"
        string_val: "gen/BatchNorm_2/moving_variance"
        string_val: "gen/BatchNorm_3/beta"
        string_val: "gen/BatchNorm_3/beta/Adam"
        string_val: "gen/BatchNorm_3/beta/Adam_1"
        string_val: "gen/BatchNorm_3/moving_mean"
        string_val: "gen/BatchNorm_3/moving_variance"
        string_val: "wd1"
        string_val: "wd1/Adam"
        string_val: "wd1/Adam_1"
        string_val: "wd2"
        string_val: "wd2/Adam"
        string_val: "wd2/Adam_1"
        string_val: "wd3"
        string_val: "wd3/Adam"
        string_val: "wd3/Adam_1"
        string_val: "wd4"
        string_val: "wd4/Adam"
        string_val: "wd4/Adam_1"
        string_val: "wd5"
        string_val: "wd5/Adam"
        string_val: "wd5/Adam_1"
        string_val: "wg1"
        string_val: "wg1/Adam"
        string_val: "wg1/Adam_1"
        string_val: "wg2"
        string_val: "wg2/Adam"
        string_val: "wg2/Adam_1"
        string_val: "wg3"
        string_val: "wg3/Adam"
        string_val: "wg3/Adam_1"
        string_val: "wg4"
        string_val: "wg4/Adam"
        string_val: "wg4/Adam_1"
        string_val: "wg5"
        string_val: "wg5/Adam"
        string_val: "wg5/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 74
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power"
  input: "beta1_power_1"
  input: "beta2_power"
  input: "beta2_power_1"
  input: "dis/BatchNorm/beta"
  input: "dis/BatchNorm/beta/Adam"
  input: "dis/BatchNorm/beta/Adam_1"
  input: "dis/BatchNorm/moving_mean"
  input: "dis/BatchNorm/moving_variance"
  input: "dis/BatchNorm_1/beta"
  input: "dis/BatchNorm_1/beta/Adam"
  input: "dis/BatchNorm_1/beta/Adam_1"
  input: "dis/BatchNorm_1/moving_mean"
  input: "dis/BatchNorm_1/moving_variance"
  input: "dis/BatchNorm_2/beta"
  input: "dis/BatchNorm_2/beta/Adam"
  input: "dis/BatchNorm_2/beta/Adam_1"
  input: "dis/BatchNorm_2/moving_mean"
  input: "dis/BatchNorm_2/moving_variance"
  input: "dis/BatchNorm_3/beta"
  input: "dis/BatchNorm_3/beta/Adam"
  input: "dis/BatchNorm_3/beta/Adam_1"
  input: "dis/BatchNorm_3/moving_mean"
  input: "dis/BatchNorm_3/moving_variance"
  input: "gen/BatchNorm/beta"
  input: "gen/BatchNorm/beta/Adam"
  input: "gen/BatchNorm/beta/Adam_1"
  input: "gen/BatchNorm/moving_mean"
  input: "gen/BatchNorm/moving_variance"
  input: "gen/BatchNorm_1/beta"
  input: "gen/BatchNorm_1/beta/Adam"
  input: "gen/BatchNorm_1/beta/Adam_1"
  input: "gen/BatchNorm_1/moving_mean"
  input: "gen/BatchNorm_1/moving_variance"
  input: "gen/BatchNorm_2/beta"
  input: "gen/BatchNorm_2/beta/Adam"
  input: "gen/BatchNorm_2/beta/Adam_1"
  input: "gen/BatchNorm_2/moving_mean"
  input: "gen/BatchNorm_2/moving_variance"
  input: "gen/BatchNorm_3/beta"
  input: "gen/BatchNorm_3/beta/Adam"
  input: "gen/BatchNorm_3/beta/Adam_1"
  input: "gen/BatchNorm_3/moving_mean"
  input: "gen/BatchNorm_3/moving_variance"
  input: "wd1"
  input: "wd1/Adam"
  input: "wd1/Adam_1"
  input: "wd2"
  input: "wd2/Adam"
  input: "wd2/Adam_1"
  input: "wd3"
  input: "wd3/Adam"
  input: "wd3/Adam_1"
  input: "wd4"
  input: "wd4/Adam"
  input: "wd4/Adam_1"
  input: "wd5"
  input: "wd5/Adam"
  input: "wd5/Adam_1"
  input: "wg1"
  input: "wg1/Adam"
  input: "wg1/Adam_1"
  input: "wg2"
  input: "wg2/Adam"
  input: "wg2/Adam_1"
  input: "wg3"
  input: "wg3/Adam"
  input: "wg3/Adam_1"
  input: "wg4"
  input: "wg4/Adam"
  input: "wg4/Adam_1"
  input: "wg5"
  input: "wg5/Adam"
  input: "wg5/Adam_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 74
          }
        }
        string_val: "beta1_power"
        string_val: "beta1_power_1"
        string_val: "beta2_power"
        string_val: "beta2_power_1"
        string_val: "dis/BatchNorm/beta"
        string_val: "dis/BatchNorm/beta/Adam"
        string_val: "dis/BatchNorm/beta/Adam_1"
        string_val: "dis/BatchNorm/moving_mean"
        string_val: "dis/BatchNorm/moving_variance"
        string_val: "dis/BatchNorm_1/beta"
        string_val: "dis/BatchNorm_1/beta/Adam"
        string_val: "dis/BatchNorm_1/beta/Adam_1"
        string_val: "dis/BatchNorm_1/moving_mean"
        string_val: "dis/BatchNorm_1/moving_variance"
        string_val: "dis/BatchNorm_2/beta"
        string_val: "dis/BatchNorm_2/beta/Adam"
        string_val: "dis/BatchNorm_2/beta/Adam_1"
        string_val: "dis/BatchNorm_2/moving_mean"
        string_val: "dis/BatchNorm_2/moving_variance"
        string_val: "dis/BatchNorm_3/beta"
        string_val: "dis/BatchNorm_3/beta/Adam"
        string_val: "dis/BatchNorm_3/beta/Adam_1"
        string_val: "dis/BatchNorm_3/moving_mean"
        string_val: "dis/BatchNorm_3/moving_variance"
        string_val: "gen/BatchNorm/beta"
        string_val: "gen/BatchNorm/beta/Adam"
        string_val: "gen/BatchNorm/beta/Adam_1"
        string_val: "gen/BatchNorm/moving_mean"
        string_val: "gen/BatchNorm/moving_variance"
        string_val: "gen/BatchNorm_1/beta"
        string_val: "gen/BatchNorm_1/beta/Adam"
        string_val: "gen/BatchNorm_1/beta/Adam_1"
        string_val: "gen/BatchNorm_1/moving_mean"
        string_val: "gen/BatchNorm_1/moving_variance"
        string_val: "gen/BatchNorm_2/beta"
        string_val: "gen/BatchNorm_2/beta/Adam"
        string_val: "gen/BatchNorm_2/beta/Adam_1"
        string_val: "gen/BatchNorm_2/moving_mean"
        string_val: "gen/BatchNorm_2/moving_variance"
        string_val: "gen/BatchNorm_3/beta"
        string_val: "gen/BatchNorm_3/beta/Adam"
        string_val: "gen/BatchNorm_3/beta/Adam_1"
        string_val: "gen/BatchNorm_3/moving_mean"
        string_val: "gen/BatchNorm_3/moving_variance"
        string_val: "wd1"
        string_val: "wd1/Adam"
        string_val: "wd1/Adam_1"
        string_val: "wd2"
        string_val: "wd2/Adam"
        string_val: "wd2/Adam_1"
        string_val: "wd3"
        string_val: "wd3/Adam"
        string_val: "wd3/Adam_1"
        string_val: "wd4"
        string_val: "wd4/Adam"
        string_val: "wd4/Adam_1"
        string_val: "wd5"
        string_val: "wd5/Adam"
        string_val: "wd5/Adam_1"
        string_val: "wg1"
        string_val: "wg1/Adam"
        string_val: "wg1/Adam_1"
        string_val: "wg2"
        string_val: "wg2/Adam"
        string_val: "wg2/Adam_1"
        string_val: "wg3"
        string_val: "wg3/Adam"
        string_val: "wg3/Adam_1"
        string_val: "wg4"
        string_val: "wg4/Adam"
        string_val: "wg4/Adam_1"
        string_val: "wg5"
        string_val: "wg5/Adam"
        string_val: "wg5/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 74
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta1_power_1"
  input: "save/RestoreV2:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "beta2_power_1"
  input: "save/RestoreV2:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "dis/BatchNorm/beta"
  input: "save/RestoreV2:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "dis/BatchNorm/beta/Adam"
  input: "save/RestoreV2:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "dis/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "dis/BatchNorm/moving_mean"
  input: "save/RestoreV2:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "dis/BatchNorm/moving_variance"
  input: "save/RestoreV2:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "dis/BatchNorm_1/beta"
  input: "save/RestoreV2:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "dis/BatchNorm_1/beta/Adam"
  input: "save/RestoreV2:10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "dis/BatchNorm_1/beta/Adam_1"
  input: "save/RestoreV2:11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "dis/BatchNorm_1/moving_mean"
  input: "save/RestoreV2:12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "dis/BatchNorm_1/moving_variance"
  input: "save/RestoreV2:13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "dis/BatchNorm_2/beta"
  input: "save/RestoreV2:14"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "dis/BatchNorm_2/beta/Adam"
  input: "save/RestoreV2:15"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "dis/BatchNorm_2/beta/Adam_1"
  input: "save/RestoreV2:16"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "dis/BatchNorm_2/moving_mean"
  input: "save/RestoreV2:17"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "dis/BatchNorm_2/moving_variance"
  input: "save/RestoreV2:18"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "dis/BatchNorm_3/beta"
  input: "save/RestoreV2:19"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "dis/BatchNorm_3/beta/Adam"
  input: "save/RestoreV2:20"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "dis/BatchNorm_3/beta/Adam_1"
  input: "save/RestoreV2:21"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "dis/BatchNorm_3/moving_mean"
  input: "save/RestoreV2:22"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "dis/BatchNorm_3/moving_variance"
  input: "save/RestoreV2:23"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dis/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "gen/BatchNorm/beta"
  input: "save/RestoreV2:24"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "gen/BatchNorm/beta/Adam"
  input: "save/RestoreV2:25"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "gen/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:26"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "gen/BatchNorm/moving_mean"
  input: "save/RestoreV2:27"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "gen/BatchNorm/moving_variance"
  input: "save/RestoreV2:28"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "gen/BatchNorm_1/beta"
  input: "save/RestoreV2:29"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "gen/BatchNorm_1/beta/Adam"
  input: "save/RestoreV2:30"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "gen/BatchNorm_1/beta/Adam_1"
  input: "save/RestoreV2:31"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "gen/BatchNorm_1/moving_mean"
  input: "save/RestoreV2:32"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "gen/BatchNorm_1/moving_variance"
  input: "save/RestoreV2:33"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "gen/BatchNorm_2/beta"
  input: "save/RestoreV2:34"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "gen/BatchNorm_2/beta/Adam"
  input: "save/RestoreV2:35"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "gen/BatchNorm_2/beta/Adam_1"
  input: "save/RestoreV2:36"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "gen/BatchNorm_2/moving_mean"
  input: "save/RestoreV2:37"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "gen/BatchNorm_2/moving_variance"
  input: "save/RestoreV2:38"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "gen/BatchNorm_3/beta"
  input: "save/RestoreV2:39"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "gen/BatchNorm_3/beta/Adam"
  input: "save/RestoreV2:40"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "gen/BatchNorm_3/beta/Adam_1"
  input: "save/RestoreV2:41"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "gen/BatchNorm_3/moving_mean"
  input: "save/RestoreV2:42"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "gen/BatchNorm_3/moving_variance"
  input: "save/RestoreV2:43"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gen/BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "wd1"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "wd1/Adam"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "wd1/Adam_1"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "wd2"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "wd2/Adam"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "wd2/Adam_1"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "wd3"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "wd3/Adam"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "wd3/Adam_1"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "wd4"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "wd4/Adam"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "wd4/Adam_1"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "wd5"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "wd5/Adam"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "wd5/Adam_1"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wd5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "wg1"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "wg1/Adam"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "wg1/Adam_1"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "wg2"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "wg2/Adam"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "wg2/Adam_1"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "wg3"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "wg3/Adam"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "wg3/Adam_1"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "wg4"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "wg4/Adam"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "wg4/Adam_1"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "wg5"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "wg5/Adam"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "wg5/Adam_1"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wg5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  device: "/device:GPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
node {
  name: "init/NoOp"
  op: "NoOp"
  input: "^wd1/Adam/Assign"
  input: "^wd1/Adam_1/Assign"
  input: "^wd1/Assign"
  input: "^wd2/Adam/Assign"
  input: "^wd2/Adam_1/Assign"
  input: "^wd2/Assign"
  input: "^wd3/Adam/Assign"
  input: "^wd3/Adam_1/Assign"
  input: "^wd3/Assign"
  input: "^wd4/Adam/Assign"
  input: "^wd4/Adam_1/Assign"
  input: "^wd4/Assign"
  input: "^wd5/Adam/Assign"
  input: "^wd5/Adam_1/Assign"
  input: "^wd5/Assign"
  input: "^wg1/Adam/Assign"
  input: "^wg1/Adam_1/Assign"
  input: "^wg1/Assign"
  input: "^wg2/Adam/Assign"
  input: "^wg2/Adam_1/Assign"
  input: "^wg2/Assign"
  input: "^wg3/Adam/Assign"
  input: "^wg3/Adam_1/Assign"
  input: "^wg3/Assign"
  input: "^wg4/Adam/Assign"
  input: "^wg4/Adam_1/Assign"
  input: "^wg4/Assign"
  input: "^wg5/Adam/Assign"
  input: "^wg5/Adam_1/Assign"
  input: "^wg5/Assign"
}
node {
  name: "init/NoOp_1"
  op: "NoOp"
  input: "^beta1_power/Assign"
  input: "^beta1_power_1/Assign"
  input: "^beta2_power/Assign"
  input: "^beta2_power_1/Assign"
  input: "^dis/BatchNorm/beta/Adam/Assign"
  input: "^dis/BatchNorm/beta/Adam_1/Assign"
  input: "^dis/BatchNorm/beta/Assign"
  input: "^dis/BatchNorm/moving_mean/Assign"
  input: "^dis/BatchNorm/moving_variance/Assign"
  input: "^dis/BatchNorm_1/beta/Adam/Assign"
  input: "^dis/BatchNorm_1/beta/Adam_1/Assign"
  input: "^dis/BatchNorm_1/beta/Assign"
  input: "^dis/BatchNorm_1/moving_mean/Assign"
  input: "^dis/BatchNorm_1/moving_variance/Assign"
  input: "^dis/BatchNorm_2/beta/Adam/Assign"
  input: "^dis/BatchNorm_2/beta/Adam_1/Assign"
  input: "^dis/BatchNorm_2/beta/Assign"
  input: "^dis/BatchNorm_2/moving_mean/Assign"
  input: "^dis/BatchNorm_2/moving_variance/Assign"
  input: "^dis/BatchNorm_3/beta/Adam/Assign"
  input: "^dis/BatchNorm_3/beta/Adam_1/Assign"
  input: "^dis/BatchNorm_3/beta/Assign"
  input: "^dis/BatchNorm_3/moving_mean/Assign"
  input: "^dis/BatchNorm_3/moving_variance/Assign"
  input: "^gen/BatchNorm/beta/Adam/Assign"
  input: "^gen/BatchNorm/beta/Adam_1/Assign"
  input: "^gen/BatchNorm/beta/Assign"
  input: "^gen/BatchNorm/moving_mean/Assign"
  input: "^gen/BatchNorm/moving_variance/Assign"
  input: "^gen/BatchNorm_1/beta/Adam/Assign"
  input: "^gen/BatchNorm_1/beta/Adam_1/Assign"
  input: "^gen/BatchNorm_1/beta/Assign"
  input: "^gen/BatchNorm_1/moving_mean/Assign"
  input: "^gen/BatchNorm_1/moving_variance/Assign"
  input: "^gen/BatchNorm_2/beta/Adam/Assign"
  input: "^gen/BatchNorm_2/beta/Adam_1/Assign"
  input: "^gen/BatchNorm_2/beta/Assign"
  input: "^gen/BatchNorm_2/moving_mean/Assign"
  input: "^gen/BatchNorm_2/moving_variance/Assign"
  input: "^gen/BatchNorm_3/beta/Adam/Assign"
  input: "^gen/BatchNorm_3/beta/Adam_1/Assign"
  input: "^gen/BatchNorm_3/beta/Assign"
  input: "^gen/BatchNorm_3/moving_mean/Assign"
  input: "^gen/BatchNorm_3/moving_variance/Assign"
  device: "/device:GPU:0"
}
node {
  name: "init"
  op: "NoOp"
  input: "^init/NoOp"
  input: "^init/NoOp_1"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "d_loss"
  input: "d_prob_x"
  input: "d_prob_z"
  input: "n_p_x"
  input: "n_p_z"
  input: "d_acc"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
}
node {
  name: "Merge_1/MergeSummary"
  op: "MergeSummary"
  input: "d_loss"
  input: "d_prob_x"
  input: "d_prob_z"
  input: "n_p_x"
  input: "n_p_z"
  input: "d_acc"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
}
node {
  name: "Merge_2/MergeSummary"
  op: "MergeSummary"
  input: "d_loss"
  input: "d_prob_x"
  input: "d_prob_z"
  input: "n_p_x"
  input: "n_p_z"
  input: "d_acc"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
}
node {
  name: "Merge_3/MergeSummary"
  op: "MergeSummary"
  input: "d_loss"
  input: "d_prob_x"
  input: "d_prob_z"
  input: "n_p_x"
  input: "n_p_z"
  input: "d_acc"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
}
node {
  name: "Merge_4/MergeSummary"
  op: "MergeSummary"
  input: "d_loss"
  input: "d_prob_x"
  input: "d_prob_z"
  input: "n_p_x"
  input: "n_p_z"
  input: "d_acc"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
}
node {
  name: "Merge_5/MergeSummary"
  op: "MergeSummary"
  input: "d_loss"
  input: "d_prob_x"
  input: "d_prob_z"
  input: "n_p_x"
  input: "n_p_z"
  input: "d_acc"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
}
node {
  name: "Merge_6/MergeSummary"
  op: "MergeSummary"
  input: "d_loss"
  input: "d_prob_x"
  input: "d_prob_z"
  input: "n_p_x"
  input: "n_p_z"
  input: "d_acc"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
}
node {
  name: "Merge_7/MergeSummary"
  op: "MergeSummary"
  input: "d_loss"
  input: "d_prob_x"
  input: "d_prob_z"
  input: "n_p_x"
  input: "n_p_z"
  input: "d_acc"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
}
node {
  name: "Merge_8/MergeSummary"
  op: "MergeSummary"
  input: "d_loss"
  input: "d_prob_x"
  input: "d_prob_z"
  input: "n_p_x"
  input: "n_p_z"
  input: "d_acc"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
}
node {
  name: "Merge_9/MergeSummary"
  op: "MergeSummary"
  input: "d_loss"
  input: "d_prob_x"
  input: "d_prob_z"
  input: "n_p_x"
  input: "n_p_z"
  input: "d_acc"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
}
node {
  name: "Merge_10/MergeSummary"
  op: "MergeSummary"
  input: "d_loss"
  input: "d_prob_x"
  input: "d_prob_z"
  input: "n_p_x"
  input: "n_p_z"
  input: "d_acc"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
}
versions {
  producer: 27
}
